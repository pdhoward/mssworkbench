{"version":3,"sources":["kafka/messages/use_recursive_timeout.js","shared/api.js","shared/search.js","components/theme_hook.js","components/url.js","components/toolbar.js","components/use_search.js","components/grid.js","components/card_view.js","components/data_view.js","components/error_msg.js","components/loader.js","business/gridContext.js","business/portfolios.js","business/topics.js","business/schemas.js","components/cell_button.js","kafka/partitions.js","kafka/messages/go_button.js","kafka/messages/fetcher.js","kafka/messages/single_topic_input.js","kafka/messages/multi_topics_input.js","kafka/messages/messages.js","kafka/topic_configs.js","kafka/topic_groups.js","kafka/brokers.js","kafka/groups.js","kafka/members.js","schema-registry/subjects.js","schema-registry/versions.js","kafka-connect/connectors.js","kafka-connect/tasks.js","kafka/broker_configs.js","App.js","index.js"],"names":["useRecursiveTimeout","callback","delay","searchId","savedCallback","useRef","savedDelay","savedSearchId","useEffect","current","id","global","setTimeout","tick","ret","Promise","then","clearTimeout","require","DescribeConfigResponse","SeekEntry","ITopicMetadata","KafkaMessage","Schema","Type","MaybeError","error","String","TopicOffsets","high","low","ConsumerOffsets","metadata","partitionOffsets","TopicConsumerGroups","groupId","offsets","TopicMessage","topic","partition","Number","value","key","message","schemaType","undefined","TopicMessages","messages","Array","hasTimeout","Boolean","Broker","nodeId","host","port","GetTopicsResult","topics","GetTopicOffsetsResult","GetTopicConfigsResult","GetBrokerConfigsResult","GetTopicConsumerGroupsResult","GetTopicResult","config","groups","GetClusterResult","brokers","controller","clusterId","GetTopicOffsetsByTimestapResult","GetTopicMessagesResult","GetSubjectsResult","GetSubjectVersionsResult","GetSchemaResult","schema","ConnectorConfig","GetConnectorsResult","GetConnectorStatusResult","name","connector","state","worker_id","tasks","type","GetConnectorConfigResult","GetConnectorTasksResult","task","GetConnectorTaskStatusResult","module","exports","ConnectorState","SearchStyle","Includes","text","pattern","searchStyle","includes","RegExp","test","SyntaxError","toLowerCase","ThemeContext","React","createContext","GlobalThemeProvider","children","theme","defaultTheme","window","localStorage","getItem","prefersDarkMode","useMediaQuery","useState","currentTheme","setCurrentTheme","palette","primary","main","secondary","materialTheme","useMemo","createMuiTheme","Provider","saveTheme","values","setItem","ThemeProvider","CssBaseline","useTheme","useContext","Url","location","baseUrl","obj","BaseUrl","subscribers","startsWith","substring","this","qs","parse","toString","props","prop","val","Refresh","push","index","indexOf","splice","query","stringify","url","history","replaceState","document","title","subscriber","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","ThemeToggle","ToggleButtonGroup","exclusive","onChange","event","newTheme","OnThemeChanged","aria-label","ToggleButton","htmlColor","SearchButtonGroup","withStyles","grouped","margin","border","useSearchButtonStyles","selectColor","hoverColor","selected","SearchToggleButton","other","classes","KafkaToolbar","anchorElement","setAnchorElement","Get","setSearchStyle","searchPattern","setSearchPattern","searchButtonColor","_","searchButtonSelectedColor","searchButtonHoverColor","menuOpen","className","AppBar","Toolbar","IconButton","edge","onClick","console","log","currentTarget","anchorEl","keepMounted","transformOrigin","vertical","horizontal","open","onClose","Link","href","MenuItem","Divider","Typography","variant","noWrap","hideSearch","InputBase","placeholder","input","inputProps","endAdornment","InputAdornment","size","e","Set","Tooltip","path","mdiFormatLetterCase","mdiRegex","target","UseSearch","getSearch","style","setSearch","onUrlChanged","Subscribe","Unsubscribe","Grid","rows","filter","r","cssTheme","columnDefs","rowData","domLayout","defaultColDef","sortable","resizable","onGridReady","onFilterChanged","enableCellTextSelection","pagination","columnTypes","connectorState","cellStyle","params","CardView","raw","filterJson","jsonTheme","src","isArray","filterArray","filterObject","res","item","filtered","isEmpty","Object","keys","length","TabPanel","role","hidden","aria-labelledby","Box","p","component","DataView","firstTab","tab","setTab","Tabs","newValue","indicatorColor","textColor","Tab","label","ErrorMsg","errorMsg","JSON","prefix","Alert","severity","Loader","cancelToken","CancelToken","a","abortController","abort","AbortController","signal","aborted","opts","segment","fetch","method","headers","body","Signal","response","Aborted","responseTxt","status","warn","gridContext","gridUpdate","Portfolios","setGridApi","setGridColumnApi","loading","setLoading","setRows","setError","errorPrefix","setErrorPrefix","GridContext","useLocation","loader","Load","fetchPortfolios","getData","urlendpoint","hostname","Fetch","data","results","portfolios","map","cellClick","cellValue","valueFormatted","newTopic","cellRenderList","cellElements","split","c","t","trim","CircularProgress","headerName","field","cellRenderer","api","columnApi","sizeColumnsToFit","rand","Math","round","random","genData","labels","datasets","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","Topics","thePath","setData","gridTopic","pathname","lastIndexOf","interval","setInterval","clearInterval","Schemas","getTopic","fetchSchemas","CellButton","msg","textAlign","marginTop","Button","getUrl","ViewMessagesButton","Partitions","fetchPartitions","match","setState","offset","Abort","cellRendererFramework","getColumnDefs","Component","durations","GoButton","setOpen","anchorRef","HTMLDivElement","selectedIndex","refreshId","refreshInfo","setRefreshInfo","onRun","handleClose","contains","ButtonGroup","isRunning","ref","onCancel","startIcon","aria-controls","aria-expanded","aria-haspopup","prevOpen","textTransform","Popper","zIndex","TransitionProps","placement","Grow","Paper","ClickAwayListener","onClickAway","MenuList","option","handleMenuItemClick","AllPartitions","InputField","TextField","onKeyDown","onEnter","min","step","maxWidth","helperText","DateTimeField","InputLabelProps","shrink","Fetcher","limit","fromTime","toTime","searchBy","progress","max","from","to","setStateAsync","updater","resolve","fetchData","onDataFetchStarted","fn","onDataFetchCompleted","preloadMessages","updateSearch","timeout","fetchMessages","onFetchMessagesClicked","loadMessages","getOffsetForTime","time","millis","Date","getTime","onError","result","parseInt","find","getSelectedPartitions","getAllPartitionsForTopic","fetchOldest","out","partitions","getPartitionOffsets","fetchMessagesForPartition","fetchNewest","el","fetchByTime","fromOffset","toOffset","fetchByOffsets","cursor","onDataFetched","encodeURIComponent","updateUrl","flex","scope","FormControl","minWidth","InputLabel","htmlFor","Select","loadingMessages","renderProgress","Fade","in","transitionDelay","unmountOnExit","float","paddingRight","align","normalizeProgress","mr","LinearProgress","valueBuffer","SingleTopicInput","loadingPartitions","getInitialOffset","partitionIndex","json","newState","nonEmpty","row","MultiTopicsInput","selectedTopics","loadingTopics","join","fetchTopics","Checkbox","checked","ListItemText","allTopicsSelected","multiple","renderValue","Messages","customCols","cols","warning","getRow","rowTimestamp","timestamp","rowOffset","rowValue","rowType","rowKey","rowTopic","rowPartition","jsonRow","col","Value","rowJson","nonEmptyCols","getNonEmptyColumns","getAllColumns","getColDef","nestingIndex","setColumnVisible","valueFormatter","timeFormatter","addCustomColumns","fields","filterModel","getFilterModel","nonEmptyColumns","forEachNodeAfterFilter","node","d","date","parseFloat","month","getMonth","padStart","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","getMilliseconds","TopicConfigLink","rel","configName","TopicConfigs","fetchConfigs","resources","configEntries","ProgressRenderer","paddingTop","paddingX","Slider","valueLabelDisplay","TopicGroups","fetchGroups","group","lag","ViewConfigsButton","Brokers","fetchBrokers","ViewMembersButton","Groups","numMembers","members","protocol","protocolType","Members","fetchMembers","memberId","clientId","clientHost","ViewVersionsButton","subject","Subjects","gridApi","fetchSubjects","fetchSubject","num_versions","versions","refreshCells","forceUpdate","Versions","fetchVersions","version","fetchSchema","addToRow","record","innerRecord","getFieldValue","schemaID","enumType","symbols","union","ViewTasksButton","ReplaceDots","Connectors","fetchConnectors","workerId","fetchConnector","fetchConnectorStatus","fetchConnectorConfig","numTasks","refreshGrid","force","orig","Tasks","fetchTasks","fetchTaskStatus","BrokerConfigLink","BrokerConfigs","broker","App","setGridTopic","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5b2f4556.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\n\n//aaron-powell.com/posts/2019-09-23-recursive-settimeout-with-react-hooks/\nfunction useRecursiveTimeout(\n    callback,\n    delay,\n    searchId\n) {\n    const savedCallback = useRef(callback);\n    const savedDelay = useRef(delay);\n    const savedSearchId = useRef(searchId);\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Remember the latest delay.\n    useEffect(() => {\n        savedDelay.current = delay;\n    }, [delay]);\n\n    // Remember the latest search id.\n    useEffect(() => {\n        savedSearchId.current = searchId;\n    }, [searchId])\n\n    // Set up the timeout loop.\n    useEffect(() => {\n        let id;\n        function tick() {\n            if (savedSearchId.current != searchId) {\n                return\n            }\n            const ret = savedCallback.current();\n            if (ret instanceof Promise) {\n                ret.then(() => {\n                    if (savedSearchId.current != searchId) {\n                        return\n                    }\n                    if (savedDelay.current !== null) {\n                        id = global.setTimeout(tick, savedDelay.current);\n                    }\n                });\n            } else {\n                if (savedSearchId.current != searchId) {\n                    return\n                }\n                if (savedDelay.current !== null) {\n                    id = global.setTimeout(tick, savedDelay.current);\n                }\n            }\n        }\n        if (savedDelay.current !== null) {\n            id = global.setTimeout(tick, savedDelay.current);\n            return () => id && clearTimeout(id);\n        }\n    }, [delay]);\n}\n\nexport default useRecursiveTimeout;\n","const { DescribeConfigResponse, \r\n        ITopicMetadata, \r\n        SeekEntry, \r\n        KafkaMessage } = require(\"kafkajs\")\r\nconst { Schema, Type } = require(\"avsc\")\r\n\r\n\r\nconst MaybeError = { error: String }\r\nconst TopicOffsets = { high: String, low: String}\r\nconst ConsumerOffsets = { metadata: String | null, partitionOffsets: TopicOffsets }\r\nconst TopicConsumerGroups = {groupId: String, offsets: ConsumerOffsets}\r\nconst TopicMessage = { topic: String, partition: Number, value: String, key: String, message: KafkaMessage, schemaType: Type | undefined }\r\nconst TopicMessages = { messages: Array, hasTimeout: Boolean }\r\nconst Broker = { nodeId: Number, host: String, port: Number }\r\nconst GetTopicsResult = { topics: Array }\r\nconst GetTopicOffsetsResult = { offsets: TopicOffsets }\r\nconst GetTopicConfigsResult =  DescribeConfigResponse\r\nconst GetBrokerConfigsResult = DescribeConfigResponse\r\nconst GetTopicConsumerGroupsResult = TopicConsumerGroups\r\nconst GetTopicResult = { offsets: TopicOffsets, config: DescribeConfigResponse, groups: TopicConsumerGroups}\r\nconst GetClusterResult = { brokers: Array, controller: Number | null, clusterId: String }\r\nconst GetTopicOffsetsByTimestapResult =  SeekEntry\r\nconst GetTopicMessagesResult = TopicMessages\r\nconst GetSubjectsResult = String\r\nconst GetSubjectVersionsResult = Number\r\nconst GetSchemaResult = { schema: Schema, id: Number }\r\nconst ConnectorState = `RUNNING` | `FAILED` | `PAUSED`\r\nconst ConnectorConfig = { [{key: String}]: String }\r\nconst GetConnectorsResult = String\r\nconst GetConnectorStatusResult = { name: String, connector: { state: ConnectorState, worker_id: String }, tasks: { state: ConnectorState, id: Number, worker_id: String}, type: String }\r\nconst GetConnectorConfigResult =  ConnectorConfig\r\nconst GetConnectorTasksResult =  { id: {connector: String, task: Number}, config: {[{key: String}]: String} }\r\nconst GetConnectorTaskStatusResult = { state: ConnectorState, id: Number, worker_id: String }\r\n\r\nmodule.exports = {\r\n    MaybeError,\r\n    TopicOffsets,\r\n    ConsumerOffsets,\r\n    TopicConsumerGroups,\r\n    TopicMessage,\r\n    TopicMessages,\r\n    Broker,\r\n    GetTopicsResult,\r\n    GetTopicOffsetsResult,\r\n    GetTopicConfigsResult,\r\n    GetBrokerConfigsResult,\r\n    GetTopicConsumerGroupsResult,\r\n    GetTopicResult,\r\n    GetClusterResult,\r\n    GetTopicOffsetsByTimestapResult,\r\n    GetTopicMessagesResult,\r\n    GetSubjectsResult,\r\n    GetSubjectVersionsResult,\r\n    GetSchemaResult,\r\n    ConnectorState,\r\n    ConnectorConfig,\r\n    GetConnectorsResult,\r\n    GetConnectorStatusResult,\r\n    GetConnectorConfigResult,\r\n    GetConnectorTasksResult,\r\n    GetConnectorTaskStatusResult\r\n}\r\n","exports.SearchStyle = `case-sensitive` | `regex` | ``\r\n\r\nexports.Includes = (text, pattern, searchStyle) =>{\r\n    switch (searchStyle) {\r\n        case `case-sensitive`:\r\n            return text.includes(pattern)\r\n        case `regex`:\r\n            try {\r\n                const re = new RegExp(pattern)\r\n                return re.test(text)\r\n            } catch (SyntaxError) {\r\n                return false\r\n            }\r\n        default:\r\n            return text.toLowerCase().includes(pattern.toLowerCase())\r\n    }\r\n}","import React, { useState, useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nexport const ThemeContext = React.createContext(null);\n\nexport const GlobalThemeProvider = ({ children, theme }) => {\n    let defaultTheme = window.localStorage.getItem(`theme`)\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)') //this must be outside of the if clause to maintain the rule of hooks\n    if (!defaultTheme) {\n      defaultTheme = prefersDarkMode ? `dark` : `light`\n    }\n\n    const [currentTheme, setCurrentTheme] = useState(\n        theme || defaultTheme\n    );\n\n    const saveTheme = (values) => {\n        setCurrentTheme(values)\n        window.localStorage.setItem(`theme`, values)\n    };\n\n    let palette = {\n      type: \"light\"\n    }\n\n    if (currentTheme === `dark`) {\n      palette = {\n        type: \"dark\",\n        primary: {\n          main: \"#90caf9\"\n        },\n        secondary: {\n          main: \"#f48fb1\"\n        }\n      }\n    }\n    const materialTheme = React.useMemo(\n\t\t() =>\n\t\t  createMuiTheme({palette}),\n\t\t[currentTheme],\n\t);\n\n    return (\n       <ThemeContext.Provider\n          value={{ theme: currentTheme, saveTheme }}\n       >\n           <ThemeProvider theme={materialTheme}>\n           <CssBaseline />\n          {children}\n          </ThemeProvider>\n       </ThemeContext.Provider>\n    );\n };\n\nexport const useTheme = () => {\n    const context = useContext(ThemeContext)\n    return context\n}","import qs from 'qs'\n\n//export type UrlProperty = `raw` | `search` | `offset` | `limit` | `from_time` | `to_time` | `search_by` | `search_style`\n\nexport class Url {\n    obj = ''\n\n    BaseUrl = ''\n\n    subscribers = []\n\n    constructor(location, baseUrl) {\n        if (location.startsWith(\"?\")) {\n            location = location.substring(1)\n        }\n        this.obj = qs.parse(location)\n        this.BaseUrl = baseUrl\n    }\n\n     Get(name) {\n        return this.obj[name]?.toString() || undefined\n    }\n\n    Set(...props) {\n        for (const prop of props) {\n            if (prop.val) {\n                this.obj[prop.name] = prop.val\n            } else {\n                delete this.obj[prop.name]\n            }\n        }\n        this.Refresh()\n    }\n\n    Subscribe(callback) {\n        this.subscribers.push(callback)\n    }\n\n    Unsubscribe(callback) {\n        const index = this.subscribers.indexOf(callback)\n        if (index > -1) {\n            this.subscribers.splice(index, 1);\n        }\n    }\n\n    Refresh() {\n        const query = qs.stringify(this.obj)\n        const url = query ? `${this.BaseUrl}?${query}` : this.BaseUrl\n\n        //We're using window.history and not the router history because we don't want to navigate away, this is just for sharing url purposes.\n        window.history.replaceState(null, document.title, url || \"?\") //if base url was not set and they are no properties on the url it will be an empty string which seems to be ignored by replaceState so we're defaulting to \"?\"\n        for (const subscriber of this.subscribers) {\n            subscriber(url)\n        }\n    }\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles, withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Divider } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { useTheme } from './theme_hook';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport Icon from '@mdi/react';\nimport { mdiRegex, mdiFormatLetterCase } from '@mdi/js';\nimport { Url } from './url';\nimport { SearchStyle } from '../shared/search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\n// interface ThemeProps {\n//   OnThemeChanged?: (theme: string) => void\n// }\n\nconst ThemeToggle = (props) => {\n  const {theme, saveTheme} = useTheme()\n\n  const handleTheme = (event, newTheme) => {\n    if (newTheme !== null) {\n      saveTheme(newTheme)\n      if (props.OnThemeChanged) {\n        props.OnThemeChanged(newTheme)\n      }\n    }\n  };\n\n  const color = theme === `dark` ? `black` : `white`\n\n  return (\n    <ToggleButtonGroup\n      value={theme}\n      exclusive\n      onChange={handleTheme}\n      aria-label=\"theme selector\"\n    >\n      <ToggleButton value=\"light\" aria-label=\"light theme\">\n        <WbSunnyIcon htmlColor={color} />\n      </ToggleButton>\n      <ToggleButton value=\"dark\" aria-label=\"dark theme\">\n        <NightsStayIcon htmlColor={color} />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n\nconst SearchButtonGroup = withStyles((theme) => ({\n  grouped: {\n    margin: theme.spacing(0),\n    border: 'none',\n    borderRadius: theme.shape.borderRadius,\n  },\n}))(ToggleButtonGroup);\n\nconst useSearchButtonStyles = makeStyles((theme) => ({\n  root: (props) => {\n    return {\n      '&$selected': {\n        backgroundColor: props.selectColor,\n      },\n      '&:hover': {\n        backgroundColor: `${props.hoverColor} !important`,\n      },\n    }\n  },\n  selected: ( {selectColor, hoverColor}) => { return {}},\n}));\n\nfunction SearchToggleButton(props) {\n  const { selectColor, hoverColor, ...other } = props;\n  const classes = useSearchButtonStyles({ selectColor, hoverColor });\n  return <ToggleButton classes={classes} {...other} />;\n}\n\n// interface Props {\n//     title: string;\n//     url: Url;\n//     hideSearch?: boolean;\n//     OnThemeChanged?: (theme: string) => void\n// }\n\nexport const KafkaToolbar = (props) => {\n  const classes = useStyles();\n  const [anchorElement, setAnchorElement] = React.useState(false);\n\n  const [searchStyle, setSearchStyle] = React.useState((props.url.Get(`search_style`) || ``) );\n  const [searchPattern, setSearchPattern] = React.useState((props.url.Get(`search`) || ``) );\n\n  const {theme, _} = useTheme()\n  const searchButtonColor = theme === `dark` ? `dimgray` : `silver`\n  const searchButtonSelectedColor = theme === `dark` ? `rgb(106, 186, 251)` : `rgb(64,82,181)`\n  const searchButtonHoverColor = theme === `dark` ? `rgb(131, 197, 251)` : `rgb(82, 97, 183)`\n\n  const menuOpen = Boolean(anchorElement)\n  const openMenu = (event) => {\n    console.log(`---------------debug toolbar line 166-----`)   \n    setAnchorElement(event.currentTarget);\n  };\n  const closeMenu = () => {\n    setAnchorElement(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={openMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Menu\n                id=\"menu-appbar\" \n                anchorEl={anchorElement}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n                open={menuOpen}\n                onClose={closeMenu}\n              >\n                <Link href=\"/\" color=\"inherit\">\n                  <MenuItem>Portfolio</MenuItem>\n                </Link>\n                <Link href=\"/brokers\" color=\"inherit\">\n                  <MenuItem>Kafka (brokers)</MenuItem>\n                </Link>\n                <Link href=\"/groups\" color=\"inherit\">\n                  <MenuItem>Kafka (groups)</MenuItem>\n                </Link>\n                <Link href=\"/schema-registry/subjects\" color=\"inherit\">\n                  <MenuItem>Schema-Registry (subjects)</MenuItem>\n                </Link>\n                <Link href=\"/kafka-connect/connectors\" color=\"inherit\">\n                  <MenuItem>Kafka-Connect (connectors)</MenuItem>\n                </Link>\n                <Divider/>\n                <Link href=\"/topics/messages\" color=\"inherit\">\n                  <MenuItem><SearchIcon /> Search across topics</MenuItem>\n                </Link>\n            </Menu>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n          <Link href=\"/\" color=\"inherit\">\n            MSS International\n          </Link>\n          </Typography>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            {props.title}\n          </Typography>\n          <ThemeToggle OnThemeChanged={props.OnThemeChanged}/>\n          {!props.hideSearch && (\n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                <SearchIcon />\n                </div>\n                <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                value={searchPattern}\n                endAdornment={\n                  <>\n                  <InputAdornment position=\"end\">\n                  <SearchButtonGroup\n                    size=\"small\"\n                    value={searchStyle}\n                    exclusive\n                    onChange={(e, value) => { setSearchStyle(value); props.url.Set({ name: `search_style`, val: value})}}\n                    aria-label=\"search options\"\n                  >\n                      <SearchToggleButton\n                        selectColor={searchButtonSelectedColor}\n                        hoverColor={searchButtonHoverColor}\n                        aria-label=\"Match Case\"\n                        value=\"case-sensitive\"\n                      >\n                        <Tooltip title=\"Match Case\">\n                          <Icon path={mdiFormatLetterCase} size={1} color={searchButtonColor}/>\n                        </Tooltip>\n                      </SearchToggleButton>\n                      <SearchToggleButton\n                        selectColor={searchButtonSelectedColor}\n                        hoverColor={searchButtonHoverColor}\n                        aria-label=\"Use Regular Expression\"\n                        value=\"regex\"\n                      >\n                        <Tooltip title=\"Use Regular Expression\">\n                          <Icon path={mdiRegex} size={1} color={searchButtonColor}/>\n                        </Tooltip>\n                      </SearchToggleButton>\n                    </SearchButtonGroup>\n                  </InputAdornment>\n                  </>\n                }\n                onChange={e => {\n                  props.url.Set({name: `search`, val: e.target.value})\n                  setSearchPattern(e.target.value)\n                }}\n                />\n            </div>\n          )}\n          <Tooltip title=\"Source Code\" aria-label=\"source code\">\n            <IconButton color=\"inherit\" target=\"_blank\" href=\"https://github.com/pdhoward\">\n                <GitHubIcon />\n            </IconButton>\n          </Tooltip >\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { Url } from \"./url\";\nimport { SearchStyle } from \"../shared/search\";\nimport { useEffect, useState } from \"react\";\n\n// export type Search = {\n//     pattern: string\n//     style: SearchStyle\n// }\n\nexport function UseSearch(url) {\n    function getSearch()  {\n        return {\n            pattern: url.Get(`search`) || ``,\n            style: (url.Get(`search_style`) || ``) \n        }\n    }\n    const [search, setSearch] = useState(getSearch())\n    useEffect(() => {\n        function onUrlChanged(_) {\n            setSearch(getSearch())\n        }\n        url.Subscribe(onUrlChanged)\n        return function cleanup() {\n            url.Unsubscribe(onUrlChanged)\n        }\n    })\n    return search\n}","import React from \"react\";\nimport { AgGridReact } from 'ag-grid-react';\nimport { GridReadyEvent, ColDef, FilterChangedEvent } from 'ag-grid-community';\nimport { useTheme } from './theme_hook'\nimport { Url } from \"./url\";\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine-dark.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { Search, UseSearch } from \"./use_search\";\nimport { Includes } from \"../shared/search\";\n\n// export interface GridProps {\n//     url: Url;\n//     search: (row: any) => string;\n//     rows: any[];\n//     columnDefs: ColDef[];\n//     onGridReady?(event: GridReadyEvent): void;\n//     onFilterChanged?(event: FilterChangedEvent): void;\n// }\n\nexport const Grid = (props) => {\n    const search = UseSearch(props.url)   \n    let rows = props.rows\n    if (search.pattern) {\n        rows = rows.filter(r => Includes(props.search(r), search.pattern, search.style))\n    }\n    const { theme, _ } = useTheme()\n    const cssTheme = theme === `dark` ? `ag-theme-alpine-dark` : `ag-theme-alpine`\n    return (\n        <div className={cssTheme}>\n            <AgGridReact                \n                columnDefs={props.columnDefs}\n                rowData={rows}\n                domLayout='autoHeight'\n                defaultColDef={{ sortable: true, filter: true, resizable: true }}\n                onGridReady={props.onGridReady}\n                onFilterChanged={props.onFilterChanged}\n                enableCellTextSelection={true}\n                pagination={true}\n                columnTypes={\n                    {\n                        connectorState: { cellStyle: params => {\n                            switch (params.value) {\n                                case `RUNNING`:\n                                    return {color: theme === `dark` ? `lightgreen` : `darkgreen` }\n                                case `FAILED`:\n                                    return {color: theme === `dark` ? `lightcoral` : `red`}\n                                case `PAUSED`:\n                                    return {color: theme === `dark` ? `orange` : `darkorange`}\n                                default:\n                                    return {}\n                            }\n                        }},\n                    }\n                }\n            >\n            </AgGridReact>\n        </div>\n    )\n}","import React from \"react\";\nimport { useTheme } from './theme_hook';\nimport ReactJson from 'react-json-view';\nimport { Url } from \"./url\";\nimport { Includes } from \"../shared/search\";\nimport { Search, UseSearch } from \"./use_search\";\n\n// export interface CardViewProps {\n//     raw: any[];\n//     url: Url;\n// }\n\nexport const CardView = (props) => {\n    const search= UseSearch(props.url)\n\n    let raw = props.raw\n    if (search.pattern) {\n        raw = filterJson(props.raw, search)\n    }\n    const { theme, _ } = useTheme()\n    const jsonTheme = theme === `dark` ? `twilight` : undefined\n    return (\n        <ReactJson src={raw} theme={jsonTheme} style={{padding: 10, border: \"solid gray 1px\"}} />\n    )\n}\n\nconst filterJson = (obj, search) => {\n    if (!obj) {\n        return obj\n    }\n    if (Array.isArray(obj)) {\n        return filterArray(obj, search)\n    }\n    if (typeof obj === 'object') {\n        return filterObject(obj, search)\n    }\n    if (Includes(obj.toString(), search.pattern, search.style)) {\n        return obj\n    }\n    return undefined\n}\n\nconst filterArray = (obj, search) => {\n    const res = []\n    for (const item of obj) {\n        const filtered = filterJson(item, search)\n        if (isEmpty(filtered)) {\n            continue\n        }\n        res.push(filtered)\n    }\n    return res\n}\n\nconst filterObject = (obj, search) => {\n    const res = {}\n    for (const key in obj) {\n        if (Includes(key, search.pattern, search.style)) {\n            res[key] = obj[key]\n            continue\n        }\n        const filtered  = filterJson(obj[key], search)\n        if (isEmpty(filtered)) {\n            continue\n        }\n        res[key] = filtered\n    }\n    return res\n}\n\nconst isEmpty = (filtered) => {\n    if (!filtered) {\n        return true\n    }\n    if (typeof filtered === 'object' && Object.keys(filtered).length === 0) {\n        return true\n    }\n    return false\n}","import React, { useState } from \"react\";\nimport { GridProps, Grid } from \"./grid\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { CardView, CardViewProps } from \"./card_view\";\n\n// interface DataViewProps extends GridProps, CardViewProps {}\n\n// interface State {\n//     value: number;\n// }\n\n// interface TabPanelProps {\n//     children?: React.ReactNode;\n//     index: number;\n//     value: number;\n// }\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`tabpanel-${index}`}\n        aria-labelledby={`tab-${index}`}\n        {...other}\n        >\n        {value === index && (\n            <Box p={3}>\n                <Typography component='span'>{children}</Typography>\n            </Box>\n        )}\n        </div>\n    );\n}\n\nexport const DataView = (props) => {\n    const showRaw = props.url.Get(`raw`) === `true`\n    const firstTab = showRaw ? 1 : 0;\n    const [tab, setTab] = useState(firstTab)\n\n    const handleTabChange = (_, newValue) => {\n        setTab(newValue)\n        props.url.Set({name: `raw`, val: newValue === 1 ? `true` : ``})\n    };\n\n    return (\n        <>\n        <Tabs value={tab} onChange={handleTabChange} aria-label=\"raw or grid mode selection\"\n        indicatorColor=\"secondary\"\n        textColor=\"secondary\">\n            <Tab label=\"Grid\"></Tab>\n            <Tab label=\"Raw\"></Tab>\n        </Tabs>\n        <TabPanel value={tab} index={0}>\n            <Grid {...props}></Grid>\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n            <CardView {...props}></CardView>\n        </TabPanel>\n        </>\n    )\n}\n","import React from \"react\";\nimport Alert from '@material-ui/lab/Alert';\n\n// interface ErrorProps {\n//     prefix?: string\n//     error?: string\n// }\n\nexport const ErrorMsg = (props) => {\n    if (!props.error) {\n        return null\n    }\n    let errorMsg = props.error\n    if (typeof errorMsg === `object`) {\n        errorMsg = JSON.stringify(errorMsg)\n    }\n    errorMsg = `${props.prefix}${errorMsg}`\n    return (<Alert severity=\"error\">{errorMsg}</Alert>)\n}","\n\n\nexport class Loader {\n    cancelToken = null;\n\n    async Load(CancelToken) {\n        this.cancelToken = new CancelToken();\n        try {\n            await this.cancelToken\n        } catch (error) {\n            if (error.name === 'AbortError') {\n                return\n            }\n            throw(error)\n        }\n        finally {\n            this.cancelToken = null\n        }\n    }\n\n    Abort() {\n        this.cancelToken.abortController.abort();\n    }\n}\n\nexport class CancelToken {    l\n    \n    abortController = new AbortController()\n\n    get Signal() {\n        return this.abortController.signal\n    }\n\n    get Aborted()  {\n        return this.abortController.signal.aborted\n    }\n\n   async Fetch(url, opts = {segment: 'empty'}) {  \n       console.log(`---inside loader l 40---`)  \n       console.log(opts)\n       console.log(url)\n        try {\n            const response = await fetch(url, { \n                                    method: 'POST', \n                                    headers: { \"Content-Type\": \"application/json\" },\n                                    body: JSON.stringify(opts), \n                                    signal: this.Signal})\n            if (this.Aborted) return null\n            try {\n                const responseTxt = await response.text()\n                try {\n                    const body = JSON.parse(responseTxt)\n                    if(!body.error && response.status >= 400) {\n                        return { error: `fetch from ${url} returned status code ${response.status}, response: ${responseTxt}` }\n                    }                   \n                    return body\n                } catch (jsonErr) {\n                    if (this.Aborted) return null\n                    console.warn(`unable to parse response json:`, jsonErr)\n                    return { error: `fetch from ${url} returned status code ${response.status}, text: ${responseTxt}`}\n                }\n            } catch (txtErr) {\n                if (this.Aborted) return null\n                console.warn(`unable to parse response text:`, txtErr)\n                return { error: `fetch from ${url} returned status code ${response.status}`}\n            }\n        } catch (error) {\n            if (this.Aborted) return null\n            return { error: `fetch from ${url} errored: ${error}`}\n        }\n    }\n}","import React, {createContext} from 'react'\r\n\r\nconst gridContext = createContext({topic: null, gridUpdate: () => {}})\r\n\r\nexport default gridContext","import React, {useState, useEffect, useContext} from \"react\";\nimport {useLocation} from 'react-router-dom'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { CellButton } from'../components/cell_button_upgrade'\nimport { GridApi, ColumnApi, GridReadyEvent, ModuleRegistry } from 'ag-grid-community';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { CancelToken, Loader } from \"../components/loader\";\nimport GridContext from \"./gridContext\"\n\n\nconst Portfolios = (props) => {    \n    const [gridApi, setGridApi] = useState(null)\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const [loading, setLoading] = useState(true)\n    const [rows, setRows] = useState([])\n    const [error, setError] = useState(\"\")\n    const [errorPrefix, setErrorPrefix] = useState(\"\")\n\n    const {gridUpdate} = useContext(GridContext)   \n    \n    let location = useLocation()    \n    let url = new Url(location.search, ``)\n    let loader= new Loader();     \n    \n\n    let onGridReady = (params) => {        \n       setGridApi(params.api)\n       setGridColumnApi(params.columnApi)\n       params.api.sizeColumnsToFit()\n       \n    }\n\n    useEffect(() => {       \n\n        async function getData() {           \n            await loader.Load(fetchPortfolios)          \n        }\n      \n        getData();\n     },[]);\n    \n    let fetchPortfolios = async (cancelToken = new CancelToken()) => {\n        let urlendpoint = ''\n        if (window.location.hostname == 'localhost' ) {\n            urlendpoint = `http://${'localhost:9999'}${'/api/portfolios'}`   \n        } else {\n            urlendpoint = 'https://mssworkbench.onrender.com/api/portfolios'  \n        }\n      \n        const data = await cancelToken.Fetch(urlendpoint)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            setLoading(false)\n            setError(data.error)\n            setErrorPrefix(\"Failed to fetch portfolios. Error: \")           \n            return\n        }       \n        const results = data.portfolios.map(r => (\n            { ...r,\n              raw: r, \n              history: props.history } ))\n\n        setLoading(false)       \n        setRows(results)     \n    }\n\n    const cellClick = (props) => {        \n        const cellValue = props.valueFormatted ? props.valueFormatted : props.value; \n        gridUpdate({newTopic: cellValue})  \n        let url = `/topic/${cellValue}`       \n        return (\n            \"<a href='\" + url + \"' target='_blank'>\" + cellValue + \"</a>\"\n          );         \n     }\n\n    const cellRenderList = props => {\n        const cellValue = props.valueFormatted ? props.valueFormatted : props.value;        \n        let cellArray = []       \n        if (typeof cellValue == 'string') {\n            cellArray = cellValue.split(',')\n        } else {\n            cellArray = [\"undefined\"]\n        }       \n        let cellElements = cellArray.map(c => {\n            let t = c.trim()\n            return `<a href=\"/schema/${t}\">${c}</a>`\n        })      \n        return (\n            `<div>\n                ${cellElements.map(c => c)}                \n            </div>`           \n        );       \n     }\n\n    const getColumnDefs = () => {\n        return [\n            { headerName: \"Topic\", field: \"topic\", cellRenderer: cellClick },\n            { headerName: \"Geo\", field: \"geography\", filter: \"agTextColumnFilter\" },\n            { headerName: \"Division\", field: \"division\", filter: \"agTextColumnFilter\" },           \n            { headerName: \"Business Process\", field: \"business_process\", filter: \"agTextColumnFilter\" },\n            { headerName: \"Sub Process\", field: \"sub_process\", filter: \"agTextColumnFilter\" },\n            { headerName: \"Topic Descr.\", field: \"topic_description\", filter: \"agTextColumnFilter\" },\n            { headerName: \"Source Schemas\", field: \"source_schemas\", filter: \"agTextColumnFilter\", cellRenderer: cellRenderList  },\n            { headerName: \"Target Schemas\", field: \"target_schemas\", filter: \"agTextColumnFilter\", cellRenderer: cellRenderList},\n        ]\n    }\n   \n    return (\n        <>\n            <KafkaToolbar\n                title=\"Portfolio\"\n                url={url}\n            >\n            </KafkaToolbar>\n            {loading && <><CircularProgress /><div>Loading...</div></>}\n            <ErrorMsg error={error} prefix={errorPrefix}></ErrorMsg>\n            {!loading && <DataView\n                search={(r) => r.topic}\n                rows={rows}\n                raw={rows.map(r => ({...r.raw}))}\n                url={url}\n                columnDefs={getColumnDefs()}\n                onGridReady={onGridReady}\n                >\n            </DataView>}\n        </>\n    )\n    \n}\n\nexport default Portfolios","import React, { useEffect, useState, useContext } from 'react';\nimport {useLocation} from 'react-router-dom'\nimport { Bar } from 'react-chartjs-2';\nimport GridContext from \"./gridContext\"\nimport \"./style.css\";\n\nconst rand = () => Math.round(Math.random() * 20 - 10);\n\nconst genData = () => ({\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [\n    {\n      label: 'Scale',\n      data: [rand(), rand(), rand(), rand(), rand(), rand()],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n});\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nconst Topics = (props) => {    \n\n  const [data, setData] = useState(genData())\n  const {gridTopic} = useContext(GridContext) \n  let location = useLocation()  \n  const getTopic = thePath => thePath.substring(thePath.lastIndexOf('/') + 1)\n  let topic = getTopic(location.pathname)\n\n  useEffect(() => {    \n    const interval = setInterval(() => setData(genData()), 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      <div className='header'>\n        <h1 className='title'>{topic}</h1>\n        <div className='links'>\n          <a\n            className='btn btn-gh'\n            href='https://github.com/pdhoward'\n          >\n            Github Source\n          </a>\n        </div>\n      </div>\n      <Bar data={data} options={options} />\n    </>\n  )\n}\n    \n    \n\n\nexport default Topics","import React, {useState, useEffect, useContext} from \"react\";\nimport {useLocation} from 'react-router-dom'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { CellButton } from'../components/cell_button_upgrade'\nimport { GridApi, ColumnApi, GridReadyEvent, ModuleRegistry } from 'ag-grid-community';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { CancelToken, Loader } from \"../components/loader\";\nimport GridContext from \"./gridContext\"\n\nconst Schemas = (props) => {    \n    const [gridApi, setGridApi] = useState(null)\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const [loading, setLoading] = useState(true)\n    const [rows, setRows] = useState([])\n    const [error, setError] = useState(\"\")\n    const [errorPrefix, setErrorPrefix] = useState(\"\")\n\n    let location = useLocation()\n\n    const {gridUpdate} = useContext(GridContext)    \n    \n    const getTopic = thePath => thePath.substring(thePath.lastIndexOf('/') + 1)\n        \n    let url = new Url(location.search, ``)\n    let loader= new Loader();    \n\n    let onGridReady = (params) => {        \n       setGridApi(params.api)\n       setGridColumnApi(params.columnApi)\n       params.api.sizeColumnsToFit()\n       \n    }\n\n    useEffect(() => {\n        async function getData() {           \n            await loader.Load(fetchSchemas)          \n        }\n        getData();\n     },[]);\n    \n    let fetchSchemas = async (cancelToken = new CancelToken()) => {\n        \n        let topic = getTopic(location.pathname)       \n        let t = topic.trim()\n        let urlendpoint = ''\n        if (window.location.hostname == 'localhost' ) {\n            urlendpoint = `http://${'localhost:9999'}${'/api/schemas/'}`   \n        } else {\n            urlendpoint = `https://mssworkbench.onrender.com/api/schemas/` \n        }\n        let opts = {}\n        opts.segment = t\n        console.log(`-----------schema l 55------`)\n        console.log(opts)\n        const data = await cancelToken.Fetch(urlendpoint, opts) \n        console.log(data)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            setLoading(false)\n            setError(data.error)\n            setErrorPrefix(\"Failed to fetch schemas. Error: \")           \n            return\n        }       \n        const results = data.map(r => (\n            { ...r,\n              raw: r, \n              history: props.history } ))\n\n        setLoading(false)       \n        setRows(results)     \n    }    \n\n    const getColumnDefs = () => {\n        return [\n            { headerName: \"Title\", field: \"title\"},\n            { headerName: \"Description\", field: \"description\", filter: \"agTextColumnFilter\" },\n            { headerName: \"Version\", field: \"$schema\", filter: \"agTextColumnFilter\" }\n        ]}\n        \n    return (\n        <>\n            <KafkaToolbar\n                title=\"Portfolio\"\n                url={url}\n            >\n            </KafkaToolbar>\n            {loading && <><CircularProgress /><div>Loading...</div></>}\n            <ErrorMsg error={error} prefix={errorPrefix}></ErrorMsg>\n            {!loading && <DataView\n                search={(r) => r.topic}\n                rows={rows}\n                raw={rows.map(r => ({...r.raw}))}\n                url={url}\n                columnDefs={getColumnDefs()}\n                onGridReady={onGridReady}\n                >\n            </DataView>}\n        </>\n    )\n    \n}\n\nexport default Schemas","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport EventNote from '@material-ui/icons/EventNote';\nimport { History } from 'history';\n\n// export interface CellProps {\n//     value?: number | string;\n//     data: { history: History<unknown> } & any;\n// }\n\n// export interface CellButtonProps extends CellProps {\n//     getUrl: () => string;\n// }\n\nexport const CellButton = (props) => {\n    let msg = \"Loading\"\n    if (props.value || props.value === 0) {\n        msg = props.value.toString()\n    }\n    return (\n        <div style={{ width: \"100%\", justifyContent: 'left', textAlign: \"left\", marginTop: -3 }}>\n            <Button color=\"primary\" size=\"small\" style={{ justifyContent: 'left', textAlign: \"left\" }}\n                onClick={() => { props.data.history.push(props.getUrl()) }}>\n                <EventNote />\n                {msg}\n            </Button>\n        </div>\n    )\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { CellProps, CellButton } from '../components/cell_button';\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { GetTopicResult, TopicOffsets } from \"../shared/api\";\nimport { History } from 'history';\nimport { CancelToken, Loader } from \"../components/loader\";\n\n// type State = {\n//     loading: boolean;\n//     error?: string;\n//     rows: Partition[];\n// }\n\nclass ViewMessagesButton  {\n    render() {\n        return <CellButton getUrl={() => `/topic/messages/${this.props.data.topic}/${this.props.data.partition}`} {...this.props} />\n    }\n}\n\n// type Partition = {\n//     partition: number,\n//     offset: string,\n//     low: string,\n//     high: string,\n//     topic: string,\n//     raw: TopicOffsets,\n//     history: History<unknown>,\n// }\n\nexport class Partitions extends React.Component  {\n    state= { loading: true, rows: [], error: \"\" }\n    url;\n    loader = new Loader()\n\n    constructor(props) {\n        super(props);\n        this.url = new Url(props.location.search, ``);\n    }\n\n    async componentDidMount() {\n        await this.loader.Load(this.fetchPartitions)\n    }\n\n    componentWillUnmount() {\n        this.loader.Abort()\n    }\n\n    fetchPartitions = async(cancelToken) => {\n        const data = await cancelToken.Fetch(`/api/topic/${this.props.match.params.topic}`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error })\n            return\n        }\n        const results = data.offsets.map(r => {\n            return { partition: r.partition, offset: r.offset, low: r.low, high: r.high, topic: this.props.match.params.topic, raw: r, history: this.props.history }\n        })\n        this.setState({ loading: false, rows: results })\n    }\n\n    getColumnDefs() {\n        return [\n            { headerName: \"Partition\", field: \"partition\", filter: \"agNumberColumnFilter\" },\n            { headerName: \"Offset\", field: \"offset\", filter: \"agNumberColumnFilter\" },\n            { headerName: \"Low\", field: \"low\", filter: \"agNumberColumnFilter\" },\n            { headerName: \"#Messages (High)\", field: \"high\", filter: \"agNumberColumnFilter\", cellRendererFramework: ViewMessagesButton }\n        ]\n    }\n\n    render() {\n        return (\n            <>\n                <KafkaToolbar\n                    title={`Partitions for topic: ${this.props.match.params.topic}`}\n                    url={this.url}\n                    hideSearch={true}\n                >\n                </KafkaToolbar>\n                {this.state.loading && <><CircularProgress /><div>Loading...</div></>}\n                <ErrorMsg error={this.state.error} prefix=\"Failed to fetch partitions. Error: \"></ErrorMsg>\n                {!this.state.loading && <DataView\n                    search={_ => \"\"}\n                    rows={this.state.rows}\n                    raw={this.state.rows.map(r => ({topic: r.topic, ...r.raw}))}\n                    url={this.url}\n                    columnDefs={this.getColumnDefs()}>\n                </DataView>}\n            </>\n        )\n    }\n}","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Typography from '@material-ui/core/Typography';\nimport useRecursiveTimeout from './use_recursive_timeout';\n\n// interface Props {\n//     isRunning: boolean;\n//     onRun: () => Promise<void>;\n//     onCancel: () => void;\n// }\n\nconst options = ['Off', '5s', '10s', '1m', '5m', '15m', '30m', '1h', '2h', '1d'];\nconst durations = [0, 5000, 10000, 60000, 5*60000, 15*60000, 30*60000, 60*60000, 120*60000, 24*60*60000];\n\nexport const GoButton = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLDivElement>(null);\n    const [refreshInfo, setRefreshInfo] = React.useState({selectedIndex: 0, refreshId: -1});\n\n    useRecursiveTimeout(props.onRun, refreshInfo.selectedIndex > 0 ? durations[refreshInfo.selectedIndex] : null, refreshInfo.refreshId)\n\n    const handleMenuItemClick = (\n        event,\n        index,\n      ) => {\n        setRefreshInfo({selectedIndex: index, refreshId: refreshInfo.refreshId + 1})\n        setOpen(false);\n      };\n\n      const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n      };\n\n      const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n          return;\n        }\n\n        setOpen(false);\n      };\n\n    return (\n    <div>\n        <ButtonGroup variant=\"contained\" color={props.isRunning ? \"secondary\" : \"primary\"} ref={anchorRef} aria-label=\"go button\" style={{ marginTop: 18 }}>\n            <Button\n                onClick={() => props.isRunning ? props.onCancel() : props.onRun()} startIcon={props.isRunning ? <CircularProgress size={18} /> : <LoopIcon />}>\n                {props.isRunning ? (<>CANCEL</>) : (<>GO</>)}\n            </Button>\n            <Button\n            size=\"small\"\n            aria-controls={open ? 'split-button-menu' : undefined}\n            aria-expanded={open ? 'true' : undefined}\n            aria-label=\"select refresh frequency\"\n            aria-haspopup=\"menu\"\n            onClick={handleToggle}\n            style={{textTransform: \"none\"}}\n            >\n                {refreshInfo.selectedIndex !== 0 && (<Typography>{options[refreshInfo.selectedIndex]}</Typography>)}\n                <ArrowDropDownIcon />\n            </Button>\n        </ButtonGroup>\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition style={{zIndex: 1}}>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList id=\"split-button-menu\">\n                    {options.map((option, index) => (\n                      <MenuItem\n                        key={option}\n                        selected={index === refreshInfo.selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                      >\n                        {option}\n                      </MenuItem>\n                    ))}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n    </div>\n    )\n}","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Fade from '@material-ui/core/Fade';\nimport { GoButton } from './go_button';\nimport { ErrorMsg} from '../../components/error_msg';\nimport { Url } from '../../components/url';\nimport { SearchStyle } from '../../shared/search';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { GetTopicMessagesResult, GetTopicOffsetsByTimestapResult, GetTopicOffsetsResult, TopicOffsets } from \"../../shared/api\";\nimport { CancelToken, Loader } from \"../../components/loader\";\n\n//export type SearchBy = \"offset\" | \"time\" | \"newest\" | \"oldest\";\n\nexport const AllPartitions = `all`;\n\n// export type Progress = {\n//     min: number;\n//     max: number;\n//     from: number;\n//     to: number;\n//     partition: string;\n//     topic: string;\n// }\n\n// interface Props {\n//     url: Url;\n//     updateUrl: () => void;\n//     onError: (error: string) => void;\n//     scope: React.ReactNode;\n//     topics: string[];\n//     partition: string;\n//     offset?: number;\n//     limit?: number;\n//     fromTime?: string;\n//     toTime?: string;\n//     searchBy: SearchBy;\n//     onDataFetched: (data: FetchData) => void;\n//     onDataFetchStarted: (partition: string) => void;\n//     onDataFetchCompleted: () => void;\n//     loadingMessages: boolean;\n//     error: string;\n//     errorPrefix: string;\n// }\n\n// type State = {\n//     search: string;\n//     searchStyle: SearchStyle;\n//     searchBy: SearchBy;\n//     offset: number | \"\";\n//     limit: number | \"\";\n//     fromTime: string;\n//     toTime: string;\n//     progress: Progress;\n// }\n\n// export type FetchData = GetTopicMessagesResult | null;\n\n// interface InputProps{\n//     label: string;\n//     value: number | \"\";\n//     onChange?: any;\n//     onEnter: () => {};\n// }\n\nconst InputField = (props) => {\n    return (\n        <TextField\n            label={props.label}\n            type=\"number\"\n            value={props.value}\n            onChange={props.onChange}\n            onKeyDown={(e) => {\n                if (e.key === \"Enter\") props.onEnter()\n            }}\n            margin=\"normal\"\n            inputProps={{ min: \"0\", step: \"1\" }}\n            style={{ marginRight: 10, maxWidth: 100 }}\n            error={props.value === \"\"}\n            helperText={props.value === \"\" ? \"Cannot be empty\" : \"\"}\n        />\n    )\n}\n\n// interface DateTimeInputProps{\n//     label: string;\n//     value: string;\n//     onChange?: any;\n//     onEnter: () => {};\n// }\n\nconst DateTimeField = (props) => {\n    return (\n        <TextField\n            label={props.label}\n            type=\"datetime-local\"\n            value={props.value}\n            onChange={props.onChange}\n            onKeyDown={(e) => {if (e.key === \"Enter\") props.onEnter()}}\n            margin=\"normal\"\n            style={{ marginRight: 10, maxWidth: 300 }}\n            InputLabelProps={{\n                shrink: true,\n            }}\n        />\n    )\n}\n\nexport class Fetcher {\n    state = {\n        search: \"\",\n        searchStyle: \"\",\n        offset: this.props.offset ?? 0,\n        limit: this.props.limit ?? 5,\n        fromTime: this.props.fromTime ?? \"\",\n        toTime: this.props.toTime ?? \"\",\n        searchBy: this.props.searchBy ?? `offset`,\n        progress: {\n            min: 0,\n            max: 0,\n            from: 0,\n            to: 0,\n            partition: \"\",\n            topic: \"\",\n        },\n    }\n    loader = new Loader()\n\n    setStateAsync = (updater) => new Promise((resolve)=> this.setState(updater, resolve))\n\n    async componentDidMount() {\n        this.updateUrl()\n        await this.fetchData(this.preloadMessages)\n    }\n\n    componentWillUnmount() {\n        this.props.url.Unsubscribe(this.onUrlChanged)\n        this.loader.Abort()\n    }\n\n    fetchData = async (cancelToken) => {\n        try {\n            this.props.onDataFetchStarted(this.props.partition)\n            await this.loader.Load(fn)\n        } finally {\n            this.props.onDataFetchCompleted()\n        }\n    }\n\n    preloadMessages = async (cancelToken) => {\n        await this.updateSearch()\n        if (cancelToken.Aborted) return\n        this.props.url.Subscribe(this.onUrlChanged)\n        let timeout = 10000\n        if (this.state.limit && this.state.limit > 100) {\n            timeout = 20000\n        }\n        await this.fetchMessages(timeout, cancelToken)\n    }\n\n    onFetchMessagesClicked = async () => {\n        await this.fetchData(this.loadMessages)\n    }\n\n    loadMessages = async (cancelToken) => {\n        await this.fetchMessages(20000, cancelToken)\n    }\n\n    async updateSearch() {\n        const search = this.props.url.Get(`search`) || ``\n        const searchStyle = (this.props.url.Get(`search_style`) || ``) \n        await this.setState({search, searchStyle})\n    }\n\n    onUrlChanged = (_) => {\n        this.updateSearch()\n    }\n\n    getOffsetForTime = async (topic, partition, time, cancelToken) => {\n        const millis = new Date(time).getTime();\n        const data = await cancelToken.Fetch(`/api/offsets/${topic}/${millis}`)\n        if (cancelToken.Aborted) {\n            return undefined\n        }\n        if (data.error) {\n            this.props.onError(data.error)\n            return undefined\n        }\n        const result = parseInt(data.find((item) => item.partition === partition)?.offset ?? \"0\")\n        return result\n    }\n\n    getSelectedPartitions = async(topic, cancelToken) => {\n        if (this.props.partition !== AllPartitions) {\n            return [parseInt(this.props.partition)]\n        }\n        return await this.getAllPartitionsForTopic(topic, cancelToken)\n    }\n\n    getAllPartitionsForTopic = async(topic, cancelToken) => {\n        const data = await cancelToken.Fetch(`/api/topic/${topic}/offsets`)\n        if (cancelToken.Aborted) {\n            return []\n        }\n        if (data.error) {\n            this.props.onError(data.error)\n            return []\n        }\n        return data.offsets.map((r) => r.partition)\n    }\n\n    fetchOldest = async (timeout, cancelToken) => {\n        let out = null\n        for (const topic of this.props.topics) {\n            const partitions = await this.getSelectedPartitions(topic, cancelToken)\n            for (const partition of partitions) {\n                const offsets = await this.getPartitionOffsets(topic, partition, cancelToken)\n                if (offsets === undefined) {\n                    return\n                }\n                await this.setStateAsync({offset: parseInt(offsets.low)})\n                out = await this.fetchMessagesForPartition(topic, timeout, partition, out, cancelToken)\n            }\n        }\n    }\n\n    fetchNewest = async (timeout, cancelToken) => {\n        if (this.state.limit === \"\") {\n            return\n        }\n        let out = null\n        for (const topic of this.props.topics) {\n            const partitions = await this.getSelectedPartitions(topic, cancelToken)\n            for (const partition of partitions) {\n                const offsets = await this.getPartitionOffsets(topic, partition, cancelToken)\n                if (offsets === undefined) {\n                    return\n                }\n                let offset = parseInt(offsets.high) - this.state.limit\n                if (offset < parseInt(offsets.low)) {\n                    offset = parseInt(offsets.low)\n                }\n                await this.setStateAsync({offset})\n                out = await this.fetchMessagesForPartition(topic, timeout, partition, out, cancelToken)\n            }\n        }\n    }\n\n    getPartitionOffsets = async (topic, partition, cancelToken) => {\n        const data= await cancelToken.Fetch(`/api/topic/${topic}/offsets`)\n        if (cancelToken.Aborted) {\n            return undefined\n        }\n        if (data.error) {\n            this.props.onError(data.error)\n            return undefined\n        }\n        return data.offsets.find((el) => el.partition === partition)\n    }\n\n    fetchByTime = async (timeout, cancelToken) => {\n        let out = null\n        for (const topic of this.props.topics) {\n            const partitions = await this.getSelectedPartitions(topic, cancelToken)\n            for (const partition of partitions) {\n                const fromOffset = await this.getOffsetForTime(topic, partition, this.state.fromTime, cancelToken)\n                if (fromOffset === undefined) {\n                    return\n                }\n                const toOffset = await this.getOffsetForTime(topic, partition, this.state.toTime, cancelToken)\n                if (toOffset === undefined) {\n                    return\n                }\n                const limit = toOffset - fromOffset\n                await this.setStateAsync({offset: fromOffset, limit})\n                out = await this.fetchMessagesForPartition(topic, timeout, partition, out, cancelToken)\n            }\n        }\n    }\n\n    fetchByOffsets = async (timeout, cancelToken) => {\n        let out = null\n        for (const topic of this.props.topics) {\n            const partitions = await this.getSelectedPartitions(topic, cancelToken)\n            for (const partition of partitions) {\n                out = await this.fetchMessagesForPartition(topic, timeout, partition, out, cancelToken)\n            }\n        }\n    }\n\n    fetchMessages = async (timeout, cancelToken) => {\n        this.setState({ progress: {\n            min: 0,\n            max: 0,\n            from: 0,\n            to: 0,\n            partition: \"\",\n            topic: \"\",\n        }})\n        switch (this.state.searchBy) {\n            case `offset`:\n                await this.fetchByOffsets(timeout, cancelToken)\n                break\n            case `time`:\n                await this.fetchByTime(timeout, cancelToken)\n                break\n            case `oldest`:\n                await this.fetchOldest(timeout, cancelToken)\n                break\n            case `newest`:\n                await this.fetchNewest(timeout, cancelToken)\n                break\n            default:\n                this.props.onError(`Unsupported search by ${this.state.searchBy}`)\n                break\n        }\n    }\n\n    fetchMessagesForPartition = async (topic, timeout, partition, out, cancelToken) => {\n        let cursor = this.state.offset\n        if (cursor === undefined || cursor === \"\" || this.state.limit === \"\") {\n            return null\n        }\n        const max = cursor + this.state.limit\n        let limit = this.state.limit\n        if (limit > 10000) {\n            limit = 10000\n        }\n        if (cursor >= max) {\n            this.props.onDataFetched(out)\n        }\n        const min = cursor\n        while (cursor < max) {\n            if (cancelToken.Aborted) {\n                break\n            }\n            const to = Math.min(max, cursor + limit)\n            this.setState({ progress: {\n                min,\n                max,\n                from: cursor,\n                to,\n                partition: this.props.partition === AllPartitions ? `Partition ${partition}: ` : \"\",\n                topic: this.props.topics.length > 1 ? `Topic ${topic}, ` : \"\",\n            }})\n            const data = await cancelToken.Fetch(\n                `/api/messages/${topic}/${partition}?limit=${limit}&offset=${cursor}&search=${encodeURIComponent(this.state.search)}&search_style=${this.state.searchStyle}&timeout=${timeout}`,\n            )\n            if (cancelToken.Aborted) {\n                break\n            }\n            cursor += limit\n            if (!out) {\n                out = data\n            } else if (data.messages) {\n                out.messages = [...out.messages, ...data.messages]\n            }\n            if (data.error) {\n                out.error = data.error\n            }\n            if (data.hasTimeout) {\n                out.hasTimeout = data.hasTimeout\n            }\n            this.setState({ progress: {\n                min,\n                max,\n                from: to,\n                to: to,\n                partition: this.props.partition === AllPartitions ? `Partition ${partition}: ` : \"\",\n                topic: this.props.topics.length > 1 ? `Topic ${topic}, ` : \"\",\n            }})\n            this.props.onDataFetched(out)\n            if (out.error || out.hasTimeout) {\n                break\n            }\n        }\n        return out\n    }\n\n    updateUrl = () => {\n        this.props.updateUrl()\n        this.props.url.Set(\n            {name: `search_by`, val: this.state.searchBy },\n            {name: `offset`, val: this.state.searchBy === \"offset\" ? this.state.offset.toString() : \"\"},\n            {name: `limit`, val: this.state.searchBy !== \"time\" ? this.state.limit.toString() : \"\"},\n            {name: `from_time`, val: this.state.searchBy === \"time\" ? this.state.fromTime.toString() : \"\"},\n            {name: `to_time`, val: this.state.searchBy === \"time\" ? this.state.toTime.toString() : \"\"},\n        )\n    }\n\n    render() {\n        return (\n            <>\n            <Toolbar>\n                <div style={{ flex: 1 }}>\n                {this.props.scope}\n                <FormControl style={{ margin: 16, minWidth: 120 }}>\n                    <InputLabel htmlFor=\"search-by-select\">Search By</InputLabel>\n                    <Select\n                        value={this.state.searchBy}\n                        onChange={(e) => this.setState({ searchBy: e.target.value }, this.updateUrl)}\n                        inputProps={{\n                            name: 'searchBy',\n                            id: 'search-by-select',\n                        }}\n                    >\n                        <MenuItem key=\"search-by-offset\" value=\"offset\">Offset</MenuItem>\n                        <MenuItem key=\"search-by-time\" value=\"time\">Time</MenuItem>\n                        <MenuItem key=\"search-by-newest\" value=\"newest\">Newest</MenuItem>\n                        <MenuItem key=\"search-by-oldest\" value=\"oldest\">Oldest</MenuItem>\n                    </Select>\n                </FormControl>\n                {this.state.searchBy === \"offset\" &&\n                <InputField\n                    label=\"Offset\"\n                    value={this.state.offset}\n                    onChange={(e) => this.setState({ offset: e.target.value === \"\" ? \"\" : parseInt(e.target.value) }, this.updateUrl)}\n                    onEnter={async () => { await this.onFetchMessagesClicked() }}\n                />}\n                {this.state.searchBy !== \"time\" &&\n                <InputField\n                    label=\"Limit\"\n                    value={this.state.limit}\n                    onChange={(e) => this.setState({ limit: e.target.value === \"\" ? \"\" : parseInt(e.target.value) }, this.updateUrl)}\n                    onEnter={async () => { await this.onFetchMessagesClicked() }}\n                />}\n                {this.state.searchBy === \"time\" &&\n                <>\n                <DateTimeField\n                    label=\"From\"\n                    value={this.state.fromTime}\n                    onChange={(e) => this.setState({ fromTime: e.target.value }, this.updateUrl)}\n                    onEnter={async () => { await this.onFetchMessagesClicked() }}\n                ></DateTimeField>\n                <DateTimeField\n                    label=\"To\"\n                    value={this.state.toTime}\n                    onChange={(e) => this.setState({ toTime: e.target.value  }, this.updateUrl)}\n                    onEnter={async () => { await this.onFetchMessagesClicked() }}\n                ></DateTimeField>\n                </>}\n                </div>\n                <GoButton\n                    onRun={this.onFetchMessagesClicked}\n                    onCancel={() => this.loader.Abort() }\n                    isRunning={this.props.loadingMessages}>\n                </GoButton>\n            </Toolbar>\n            <ErrorMsg error={this.props.error} prefix={this.props.errorPrefix}></ErrorMsg>\n            {this.renderProgress()}\n            </>\n        )\n    }\n\n    normalizeProgress(value) {\n        return (value - this.state.progress.min) * 100 / (this.state.progress.max - this.state.progress.min)\n    }\n\n    renderProgress() {\n        return (\n            <Fade in={this.props.loadingMessages && this.state.progress.max !== 0} style={{\n                transitionDelay: this.props.loadingMessages && this.state.progress.max !== 0 ? '1500ms' : '0ms',\n              }}\n              unmountOnExit>\n                  <Box alignItems=\"center\" style={{float: \"right\", paddingRight: 15, width: \"40%\"}}>\n                      <Box minWidth={35} style={{padding: 10}}>\n                          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">{`${this.state.progress.topic}${this.state.progress.partition}Loading offset ${this.state.progress.from} (${Math.round(\n                          this.normalizeProgress(this.state.progress.from),\n                          )}%)`}</Typography>\n                      </Box>\n                      <Box width=\"100%\" mr={1}>\n                          <LinearProgress variant=\"buffer\" value={this.normalizeProgress(this.state.progress.from)} valueBuffer={this.normalizeProgress(this.state.progress.to)}/>\n                      </Box>\n                  </Box>\n              </Fade>\n        )\n    }\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Fetcher, SearchBy, AllPartitions, FetchData } from './fetcher';\nimport { Url } from '../../components/url';\nimport { GetTopicOffsetsResult, TopicOffsets } from \"../../shared/api\";\n\n// interface Props {\n//     topic: string;\n//     partition?: string;\n//     offset?: number;\n//     limit?: number;\n//     fromTime?: string;\n//     toTime?: string;\n//     searchBy: SearchBy;\n//     url: Url;\n//     onDataFetched: (data: FetchData) => void;\n//     onDataFetchStarted: (partition: string) => void;\n// }\n\n// type State = {\n//     partition: string;\n//     offset: number;\n//     loadingMessages: boolean;\n//     loadingPartitions: boolean;\n//     partitions: PartitionSelector[];\n//     error?: string;\n// }\n\n// type PartitionSelector = {\n//     label: string;\n//     value: string;\n//     isEmpty: boolean;\n// }\n\nexport class SingleTopicInput  {\n    state = {\n        offset: 0,\n        partitions: [],\n        loadingMessages: false,\n        loadingPartitions: true,\n        partition: this.props.partition || \"0\",\n        error: \"\",\n    }\n\n    async componentDidMount() {\n        await this.fetchPartitions()\n    }\n\n    async fetchPartitions() {\n        const response = await fetch(`/api/topic/${this.props.topic}/offsets`)\n        const data = await response.json()\n        if (data.error) {\n            this.setState({loadingPartitions: false, error: data.error})\n            return\n        }\n        const results = data.offsets.map((r) => {\n            const isEmpty = r.high.toString() === \"0\"\n            const label = isEmpty ?\n                `Partition: ${r.partition} (Empty)` :\n                `Partition: ${r.partition} (Low- ${r.low}, High- ${r.high}, Current- ${r.offset})`;\n            return { label: label, value: r.partition.toString(), isEmpty }\n        })\n        const newState = { loadingPartitions: false, partitions: [{label: `All Partitions`, value: AllPartitions, isEmpty: true}, ...results], offset: this.state.offset, partition: this.state.partition, loadingMessages: this.state.loadingMessages }\n        if (this.props.partition === undefined) {\n            const nonEmpty = results.find(row => !row.isEmpty)\n            if (nonEmpty) {\n                newState.partition = nonEmpty.value\n            }\n        }\n        const partitionIndex = newState.partition || this.props.partition\n        const offset = await this.getInitialOffset(partitionIndex, data)\n        if (offset !== undefined) {\n            newState.offset = offset\n        }\n        this.setState(newState)\n    }\n\n    getInitialOffset = async (partitionIndex, data) => {\n        if (this.props.offset !== undefined) {\n            return this.props.offset\n        }\n        if (partitionIndex === undefined || partitionIndex === AllPartitions) {\n            return undefined\n        }\n        const partition = data.offsets[parseInt(partitionIndex)]\n        const high = parseInt(partition.high)\n        const low = parseInt(partition.low)\n        let offset = high - (this.props.limit ?? 5)\n        if (offset < low) {\n            offset = low\n        }\n        return offset\n    }\n\n    updateUrl = () => {\n        this.props.url.BaseUrl = `/topic/messages/${this.props.topic}/${this.state.partition}`\n    }\n\n    render() {\n        if (this.state.loadingPartitions) {\n            return (<><CircularProgress /><div>Loading...</div></>)\n        }\n        const partitions = this.state.partitions.map(p => (<MenuItem key={p.label} value={p.value}>{p.label}</MenuItem>))\n        return (\n            <>\n            {!this.state.loadingPartitions && ( <Fetcher\n                url={this.props.url}\n                updateUrl={this.updateUrl}\n                onError={(error) => this.setState({error})}\n                scope={(\n                    <FormControl style={{ margin: 16, minWidth: 120 }}>\n                        <InputLabel htmlFor=\"partition-select\">Partition</InputLabel>\n                        <Select\n                            value={this.state.partition}\n                            onChange={(e) => this.setState({ partition: e.target.value }, () => { this.updateUrl(); this.props.url.Refresh(); })}\n                            inputProps={{\n                                name: 'partition',\n                                id: 'partition-select',\n                            }}\n                        >\n                            {partitions}\n                        </Select>\n                    </FormControl>\n                )}\n                topics={[this.props.topic]}\n                partition={this.state.partition}\n                offset={this.state.offset}\n                limit={this.props.limit}\n                fromTime={this.props.fromTime}\n                toTime={this.props.toTime}\n                searchBy={this.props.searchBy}\n                onDataFetched={this.props.onDataFetched}\n                onDataFetchStarted={() => { this.setState({loadingMessages: true}); this.props.onDataFetchStarted(this.state.partition)} }\n                onDataFetchCompleted={() => this.setState({loadingMessages: false})}\n                loadingMessages={this.state.loadingMessages}\n                error={this.state.error ?? \"\"}\n                errorPrefix={\"Error while loading messages: \"}\n            >\n            </Fetcher>)}\n            </>\n        )\n    }\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Fetcher, SearchBy, AllPartitions, FetchData } from './fetcher';\nimport { Url } from '../../components/url';\nimport { GetTopicsResult } from \"../../shared/api\";\nimport { ITopicMetadata } from \"kafkajs\";\n\n// interface Props {\n//     selectedTopics?: string;\n//     limit?: number;\n//     fromTime?: string;\n//     toTime?: string;\n//     searchBy: SearchBy;\n//     url: Url;\n//     onDataFetched: (data: FetchData) => void;\n//     onDataFetchStarted: (partition: string) => void;\n// }\n\n// type State = {\n//     topics: string[];\n//     selectedTopics: string[];\n//     loadingMessages: boolean;\n//     loadingTopics: boolean;\n//     error?: string;\n// }\n\nexport class MultiTopicsInput  {\n    state = {\n        topics: [],\n        selectedTopics: this.props.selectedTopics?.split(`,`) ?? [],\n        loadingMessages: false,\n        loadingTopics: true,\n        error: \"\",\n    }\n\n    async componentDidMount() {\n        await this.fetchTopics()\n    }\n\n    async fetchTopics() {\n        const response = await fetch(`/api/topics`)\n        const data = await response.json()\n        if (data.error) {\n            this.setState({loadingTopics: false, error: data.error })\n            return\n        }\n        const topics = data.topics.map((r) => r.name)\n        this.setState({topics, loadingTopics: false})\n    }\n\n    updateUrl = () => {\n        this.props.url.BaseUrl = `/topics/messages/${this.state.selectedTopics.join(`,`)}`\n    }\n\n    render() {\n        if (this.state.loadingTopics) {\n            return (<><CircularProgress /><div>Loading...</div></>)\n        }\n        const topics = this.state.topics.map(topic => (\n            <MenuItem key={topic} value={topic}>\n                <Checkbox checked={this.state.selectedTopics.indexOf(topic) > -1} />\n                <ListItemText primary={topic} />\n            </MenuItem>))\n\n        const allTopicsSelected = this.state.selectedTopics.length === this.state.topics.length\n\n        return (\n            <>\n            {!this.state.loadingTopics && ( <Fetcher\n                url={this.props.url}\n                updateUrl={this.updateUrl}\n                onError={(error) => this.setState({error})}\n                scope={(\n                    <FormControl style={{ margin: 16, minWidth: 120 }}>\n                    <InputLabel htmlFor=\"topics-select\">Topics</InputLabel>\n                    <Select\n                        value={this.state.selectedTopics}\n                        multiple\n                        renderValue={(selected) => selected.length > 2 ? `${selected.length} topics` : selected.join(', ')}\n                        onChange={(e) => {\n                            let selected = e.target.value\n                            if (selected && selected.includes(\"SelectAll\")) {\n                                if (allTopicsSelected) {\n                                    selected = []\n                                } else {\n                                    selected = this.state.topics\n                                }\n                            }\n                            this.setState({ selectedTopics: selected }, () => { this.updateUrl(); this.props.url.Refresh(); })\n                        }}\n                        inputProps={{\n                            name: 'topics',\n                            id: 'topics-select',\n                        }}\n                    >\n                        <MenuItem key={\"select all topics\"} value=\"SelectAll\">\n                            <Checkbox checked={allTopicsSelected} />\n                            <ListItemText primary={allTopicsSelected ? \"Select none\" : \"Select all\"} />\n                        </MenuItem>\n\n                        {topics}\n                    </Select>\n                </FormControl>\n            )}\n            topics={this.state.selectedTopics}\n            partition={AllPartitions}\n            limit={this.props.limit}\n            fromTime={this.props.fromTime}\n            toTime={this.props.toTime}\n            searchBy={this.props.searchBy}\n            onDataFetched={this.props.onDataFetched}\n            onDataFetchStarted={() => { this.setState({loadingMessages: true}); this.props.onDataFetchStarted(AllPartitions)} }\n            onDataFetchCompleted={() => this.setState({loadingMessages: false})}\n            loadingMessages={this.state.loadingMessages}\n            error={this.state.error ?? \"\"}\n            errorPrefix={\"Error while loading messages: \"}\n            >\n            </Fetcher>)}\n            </>\n        )\n    }\n}","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { KafkaToolbar} from '../../components/toolbar';\nimport { DataView} from '../../components/data_view';\nimport { ErrorMsg} from '../../components/error_msg';\nimport { SingleTopicInput} from './single_topic_input';\nimport { SearchBy, AllPartitions, FetchData} from './fetcher';\nimport { MultiTopicsInput} from './multi_topics_input';\nimport Alert from '@material-ui/lab/Alert';\nimport { GridReadyEvent, GridApi, ColumnApi, FilterChangedEvent, ColDef, ValueFormatterParams } from 'ag-grid-community';\nimport { Url } from \"../../components/url\";\nimport { TopicMessage } from \"../../shared/api\";\n\n// interface Props extends RouteComponentProps<{ topic?: string, partition?: string, topics?: string }> {\n// }\n\n// type State = {\n//     rows: any[];\n//     error?: string;\n//     warning: string;\n//     customCols: {cols: {}};\n//     partition?: string;\n// }\n\nexport class Messages extends React.Component  {\n    state = {\n        rows: [],\n        customCols: {cols: {}},\n        error: \"\",\n        warning: \"\",\n        partition: this.props.match.params.partition,\n    }\n    api = null;\n    columnApi = null;\n    url;\n\n    constructor(props) {\n        super(props);\n        this.url = new Url(props.location.search, ``);\n    }\n\n    getRow = (data, customCols) => {\n        let row = {\n            rowTimestamp: data.message.timestamp,\n            rowOffset: parseInt(data.message.offset),\n            rowValue: data.value,\n            rowType: data.schemaType ? data.schemaType.name : \"\",\n            rowKey: data.key,\n            rowTopic: data.topic,\n            rowPartition: data.partition,\n        }\n        let cols = {}\n        let rowValue = data.value\n        try {\n            cols = JSON.parse(data.value)\n            rowValue = cols\n        }\n        catch (error) {\n            console.warn(`row value is not json encoded, error: ${error}, value: ${data.value}`)\n        }\n        let jsonRow = {}\n        for (const col in row) {\n            if (col === \"rowValue\") {\n                jsonRow.Value = rowValue;\n                continue;\n            }\n            if (col.startsWith(\"row\")) {\n                jsonRow[col.substring(3)] = row[col];\n            }\n        }\n        row = {...row, ...cols}\n        row.rowJson = jsonRow;\n        customCols.cols = {...customCols.cols, ...cols}\n        return row\n    }\n\n    onGridReady = (params) => {\n        this.api = params.api;\n        this.columnApi = params.columnApi;\n    }\n\n    onFilterChanged = (event) => {\n        if (!this.columnApi) {\n            return\n        }\n        const nonEmptyCols = this.getNonEmptyColumns()\n        for (const col of this.columnApi.getAllColumns()) {\n            let id = col.getColDef().field\n            if (id.startsWith(\"row\")) {\n                continue\n            }\n            const nestingIndex = id.indexOf('.')\n            if (nestingIndex >= 1) {\n                id = id.substring(0, nestingIndex)\n            }\n            if (nonEmptyCols[id]) {\n                this.columnApi.setColumnVisible(col, true)\n            } else {\n                this.columnApi.setColumnVisible(col, false)\n            }\n        }\n    }\n\n    getColumnDefs = () => {\n        const cols = [\n            { headerName: \"Timestamp\", field: \"rowTimestamp\", valueFormatter: this.timeFormatter },\n            { headerName: \"Offset\", field: \"rowOffset\", filter: \"agNumberColumnFilter\" },\n            { headerName: \"Type\", field: \"rowType\" }\n        ]\n        if (this.props.match.params.topic === undefined) {\n            cols.push({headerName: \"Topic\", field: \"rowTopic\"})\n        }\n        if (this.state.partition === AllPartitions) {\n            cols.push({headerName: \"Partition\", field: \"rowPartition\"})\n        }\n        this.addCustomColumns(cols, this.state.customCols.cols, ``)\n        cols.push({headerName: \"Key\", field: \"rowKey\"})\n        cols.push({headerName: \"Value\", field: \"rowValue\"})\n        return cols\n    }\n\n    addCustomColumns = (cols, fields, prefix) => {\n        for (const prop in fields) {\n            const val = fields[prop]\n            if (typeof val === 'object') {\n                this.addCustomColumns(cols, val, `${prefix}${prop}.`)\n            } else {\n                const name = `${prefix}${prop}`\n                cols.push({headerName: name, field: name})\n            }\n        }\n    }\n\n    getNonEmptyColumns = () => {\n        if (!this.api) {\n            return undefined\n        }\n        const filterModel = this.api.getFilterModel()\n        if (Object.keys(filterModel).length === 0) {\n            return undefined\n        }\n        const nonEmptyColumns = {}\n        this.api.forEachNodeAfterFilter((node, index) => {\n            for (const col in node.data) {\n                if (node.data[col]) {\n                    nonEmptyColumns[col] = true\n                }\n            }\n        })\n        return nonEmptyColumns\n    }\n\n    timeFormatter(params) {\n        const date = new Date(parseFloat(params.value));\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\")\n        const day = date.getDate().toString().padStart(2, \"0\")\n        const year = date.getFullYear().toString().padStart(4, \"0\")\n        const hour = date.getHours().toString().padStart(2, \"0\")\n        const minute = date.getMinutes().toString().padStart(2, \"0\")\n        const second = date.getSeconds().toString().padStart(2, \"0\")\n        const millis = date.getMilliseconds().toString().padStart(3, \"0\")\n        return `${month}/${day}/${year} ${hour}:${minute}:${second}.${millis}`\n    }\n\n    onDataFetchStarted = (partition) => {\n        this.setState({error: \"\", warning: \"\", partition})\n    }\n\n    onDataFetched = (data) => {\n        console.log(data)\n        if (!data) {\n            return\n        }\n        if (data.error) {\n            this.setState({error: data.error})\n            return\n        }\n        const customCols = {cols: {}}\n        const rows = data.messages.map(d => this.getRow(d, customCols))\n        let warning = \"\"\n        if (data.hasTimeout) {\n            if (this.props.match.params.topic === undefined) {\n                warning = `Some messages may (or may not) be missing as one or more topics timed out`\n            } else {\n                warning = `Some messages may (or may not) be missing as the topic timed out`\n            }\n        }\n        this.setState({\n            rows, customCols, warning\n        })\n    }\n\n    render() {\n        const title = this.props.match.params.topic === undefined ? `Cross-Topic search` : `Messages for topic: ${this.props.match.params.topic}`\n        const offset = this.url.Get(`offset`)\n        return (\n            <>\n                <KafkaToolbar\n                    title={title}\n                    url={this.url}\n                >\n                </KafkaToolbar>\n                <br />\n                { this.props.match.params.topic === undefined ?\n                (\n                    <MultiTopicsInput\n                        onDataFetched={this.onDataFetched}\n                        onDataFetchStarted={this.onDataFetchStarted}\n                        url={this.url}\n                        limit={parseInt(this.url.Get(`limit`) ?? \"5\")}\n                        fromTime={this.url.Get(`from_time`)}\n                        toTime={this.url.Get(`to_time`)}\n                        searchBy={(this.url.Get(`search_by`) ?? `offset`) }\n                        selectedTopics={this.props.match.params.topics}\n                        >\n                    </MultiTopicsInput>\n                ) : (\n                    <SingleTopicInput\n                        topic={this.props.match.params.topic}\n                        partition={this.props.match.params.partition}\n                        url={this.url}\n                        offset={offset === undefined ? undefined : parseInt(offset)}\n                        limit={parseInt(this.url.Get(`limit`) ?? \"5\")}\n                        fromTime={this.url.Get(`from_time`)}\n                        toTime={this.url.Get(`to_time`)}\n                        searchBy={(this.url.Get(`search_by`) ?? `offset`) }\n                        onDataFetched={this.onDataFetched}\n                        onDataFetchStarted={this.onDataFetchStarted}\n                        >\n                    </SingleTopicInput>\n                )}\n                { this.state.warning && (<Alert severity=\"warning\">{this.state.warning}</Alert>)}\n                <ErrorMsg error={this.state.error} prefix=\"Failed to fetch data. Error: \"></ErrorMsg>\n                <DataView\n                    search={r => `${r.rowValue},${r.rowKey},${r.rowType}`}\n                    rows={this.state.rows}\n                    raw={this.state.rows.map(r => r.rowJson)}\n                    url={this.url}\n                    columnDefs={this.getColumnDefs()}\n                    onGridReady={this.onGridReady}\n                    onFilterChanged={this.onFilterChanged}\n                ></DataView>\n            </>\n        )\n    }\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { KafkaToolbar } from '../components/toolbar';\nimport { DataView } from '../components/data_view';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { GetTopicConfigsResult } from \"../shared/api\";\nimport { ConfigEntries } from \"kafkajs\";\nimport { CancelToken, Loader } from \"../components/loader\";\n\n// type State = {\n//     loading: boolean;\n//     error?: string;\n//     rows: ConfigEntries[];\n//     data?: GetTopicConfigsResult;\n// }\n\n// export interface TopicConfigLinkProps {\n//     data: { configName: string };\n// }\n\nconst TopicConfigLink = (props) => {\n    return (\n    <Link rel=\"noopener noreferrer\" color=\"primary\" target=\"_blank\" href={`https://docs.confluent.io/current/installation/configuration/topic-configs.html#${props.data.configName}`}>\n                {props.data.configName}\n    </Link>)\n}\n\nexport class TopicConfigs extends React.Component  {\n    state= { loading: true, rows: [], data: undefined, error: \"\" }\n    url;\n    loader = new Loader()\n\n    constructor(props) {\n        super(props);\n        this.url = new Url(props.location.search, ``);\n    }\n\n    async componentDidMount() {\n        await this.loader.Load(this.fetchConfigs)\n    }\n\n    componentWillUnmount() {\n        this.loader.Abort()\n    }\n\n    fetchConfigs = async(cancelToken) => {\n        const data = await cancelToken.Fetch(`/api/topic/${this.props.match.params.topic}/config`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error })\n            return\n        }\n        const results = data.resources[0].configEntries\n        this.setState({ data, loading: false, rows: results })\n    }\n\n    getColumnDefs() {\n        return [\n            { headerName: \"Name\", field: \"configName\", cellRendererFramework: TopicConfigLink },\n            { headerName: \"Value\", field: \"configValue\" },\n            { headerName: \"Readonly\", field: \"readOnly\" },\n            { headerName: \"Is Default\", field: \"isDefault\"},\n            { headerName: \"Is Sensitive\", field: \"isSensitive\"},\n        ]\n    }\n\n    render() {\n        return (\n            <>\n                <KafkaToolbar\n                    title={`Configs for topic: ${this.props.match.params.topic}`}\n                    url={this.url}\n                >\n                </KafkaToolbar>\n                {this.state.loading && <><CircularProgress /><div>Loading...</div></>}\n                <ErrorMsg error={this.state.error} prefix=\"Failed to fetch configs. Error: \"></ErrorMsg>\n                {!this.state.loading && <DataView\n                    search={(r) => r.configName}\n                    rows={this.state.rows}\n                    raw={this.state.data?.resources ?? []}\n                    url={this.url}\n                    columnDefs={this.getColumnDefs()}>\n                </DataView>}\n            </>\n        )\n    }\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Slider from '@material-ui/core/Slider';\nimport { KafkaToolbar } from '../components/toolbar';\nimport { CellProps } from '../components/cell_button';\nimport { DataView } from '../components/data_view';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Box from '@material-ui/core/Box';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { GetTopicConsumerGroupsResult } from \"../shared/api\";\nimport { CancelToken, Loader } from \"../components/loader\";\n\n// type State = {\n//     loading: boolean;\n//     error?: string;\n//     rows: Group[];\n//     data: GetTopicConsumerGroupsResult;\n// }\n\nclass ProgressRenderer extends React.Component {\n    render() {\n        let offset = this.props.data.offset\n        if (offset === -1) {\n            offset = 0\n        }\n        return (\n        <Box minWidth={150} paddingTop={1} paddingX={3}>\n            <Slider\n                value={offset}\n                aria-labelledby=\"fake\"\n                valueLabelDisplay=\"off\"\n                step={1}\n                min={this.props.data.low}\n                max={this.props.data.high}\n            />\n        </Box>\n        )\n    }\n}\n\n// type Group = {\n//     name: string,\n//     partition: number,\n//     offset: number,\n//     high: number,\n//     low: number,\n//     lag: number,\n// }\n\nexport class TopicGroups extends React.Component {\n    state = { loading: true, rows: [], data: [], error: \"\" }\n    url;\n    loader = new Loader()\n\n    constructor(props) {\n        super(props);\n        this.url = new Url(props.location.search, ``);\n    }\n\n    async componentDidMount() {\n        await this.loader.Load(this.fetchGroups)\n    }\n\n    componentWillUnmount() {\n        this.loader.Abort()\n    }\n\n    fetchGroups = async(cancelToken) => {\n        const data = await cancelToken.Fetch(`/api/topic/${this.props.match.params.topic}/consumer_groups`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error })\n            return\n        }\n        const results = []\n        for (const group of data) {\n            for (const partition of group.offsets) {\n                const high = parseInt(partition.partitionOffsets?.high ?? \"-1\")\n                const offset = parseInt(partition.offset)\n                let lag = high - offset\n                if (offset === -1) {\n                    lag -= 1\n                }\n                results.push({\n                    name: group.groupId,\n                    partition: partition.partition,\n                    offset,\n                    high,\n                    low: parseInt(partition.partitionOffsets?.low ?? \"-1\"),\n                    lag,\n                })\n            }\n        }\n        this.setState({ data, loading: false, rows: results })\n    }\n\n    getColumnDefs() {\n        return [\n            { headerName: \"Name\", field: \"name\" },\n            { headerName: \"Partition\", field: \"partition\", filter: \"agNumberColumnFilter\" },\n            { headerName: \"Progress\", cellRendererFramework: ProgressRenderer },\n            { headerName: \"Offset\", field: \"offset\", filter: \"agNumberColumnFilter\" },\n            { headerName: \"Low\", field: \"low\", filter: \"agNumberColumnFilter\" },\n            { headerName: \"High\", field: \"high\", filter: \"agNumberColumnFilter\" },\n            { headerName: \"Lag\", field: \"lag\", filter: \"agNumberColumnFilter\" },\n        ]\n    }\n\n    render() {\n        return (\n            <>\n                <KafkaToolbar\n                    title={`Consumer groups for topic: ${this.props.match.params.topic}`}\n                    url={this.url}\n                >\n                </KafkaToolbar>\n                {this.state.loading && <><CircularProgress /><div>Loading...</div></>}\n                <ErrorMsg error={this.state.error} prefix=\"Failed to fetch consumer groups. Error: \"></ErrorMsg>\n                {!this.state.loading && <DataView\n                    search={(r) => r.name}\n                    rows={this.state.rows}\n                    raw={this.state.data}\n                    url={this.url}\n                    columnDefs={this.getColumnDefs()}>\n                </DataView>}\n            </>\n        )\n    }\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { Broker, GetClusterResult } from \"../shared/api\";\nimport { CancelToken, Loader } from \"../components/loader\";\nimport { CellButton, CellProps } from \"../components/cell_button\";\nimport { History } from 'history';\n\n// type State = {\n//     loading: boolean;\n//     error?: string;\n//     rows: BrokerRow[];\n// }\n\n// type BrokerRow = { history: History<unknown> } & Broker\n\nclass ViewConfigsButton  {\n    render() {\n        return <CellButton getUrl={() => `/broker/configs/${this.props.data.nodeId}`} data={this.props.data} value=\"View\"/>\n    }\n}\n\nexport class Brokers extends React.Component  {\n    state = { loading: true, rows: [], error: \"\" }\n    url;\n    loader = new Loader()\n\n    constructor(props) {\n        super(props);\n        this.url = new Url(props.location.search, ``);\n    }\n\n    async componentDidMount() {\n        await this.loader.Load(this.fetchBrokers)\n    }\n\n    componentWillUnmount() {\n        this.loader.Abort()\n    }\n\n    fetchBrokers = async (cancelToken) => {\n        const data = await cancelToken.Fetch(`/api/cluster`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error})\n            return\n        }\n        const rows = data.brokers.map((r) => { return { history: this.props.history, ...r }})\n        this.setState({ loading: false, rows })\n    }\n\n    getColumnDefs() {\n        return [\n            { headerName: \"Node ID\", field: \"nodeId\", filter: \"agNumberColumnFilter\" },\n            { headerName: \"Host\", field: \"host\" },\n            { headerName: \"Port\", field: \"port\", filter: \"agNumberColumnFilter\" },\n            { headerName: \"Configs\", field: \"view_configs\", cellRendererFramework: ViewConfigsButton },\n        ]\n    }\n\n    render() {\n        return (\n            <>\n                <KafkaToolbar\n                    title=\"Brokers\"\n                    url={this.url}\n                >\n                </KafkaToolbar>\n                {this.state.loading && <><CircularProgress /><div>Loading...</div></>}\n                <ErrorMsg error={this.state.error} prefix=\"Failed to fetch brokers. Error: \"></ErrorMsg>\n                {!this.state.loading && <DataView\n                    search={(r) => r.host}\n                    rows={this.state.rows}\n                    raw={this.state.rows}\n                    url={this.url}\n                    columnDefs={this.getColumnDefs()}>\n                </DataView>}\n            </>\n        )\n    }\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { CellProps, CellButton } from '../components/cell_button';\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { CancelToken, Loader } from \"../components/loader\";\n\n// type State = {\n//     loading: boolean;\n//     error: any;\n//     rows: any[];\n// }\n\nclass ViewMembersButton  {\n    render() {\n        return <CellButton getUrl={() => `/members/${this.props.data.groupId}`} {...this.props} />\n    }\n}\n\nexport class Groups extends React.Component {\n    state = { loading: true, rows: [], error: \"\" }\n    url;\n    loader = new Loader()\n\n    constructor(props) {\n        super(props);\n        this.url = new Url(props.location.search, ``);\n    }\n\n    async componentDidMount() {\n        await this.loader.Load(this.fetchGroups)\n    }\n\n    componentWillUnmount() {\n        this.loader.Abort()\n    }\n\n    fetchGroups = async (cancelToken) => {\n        const data = await cancelToken.Fetch(`/api/groups`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error})\n            return\n        }\n        const results = data.groups.map((r) => {\n            return { numMembers: r.members.length, raw: r, history: this.props.history, ...r }\n        })\n        this.setState({ loading: false, rows: results })\n    }\n\n    getColumnDefs() {\n        return [\n            { headerName: \"Group ID\", field: \"groupId\" },\n            { headerName: \"Protocol\", field: \"protocol\" },\n            { headerName: \"Protocol Type\", field: \"protocolType\" },\n            { headerName: \"State\", field: \"state\" },\n            { headerName: \"#Members\", field: \"numMembers\", filter: \"agNumberColumnFilter\", cellRendererFramework: ViewMembersButton }\n        ]\n    }\n\n    render() {\n        return (\n            <>\n                <KafkaToolbar\n                    title=\"Groups\"\n                    url={this.url}\n                >\n                </KafkaToolbar>\n                {this.state.loading && <><CircularProgress /><div>Loading...</div></>}\n                <ErrorMsg error={this.state.error} prefix=\"Failed to fetch groups. Error: \"></ErrorMsg>\n                {!this.state.loading && <DataView\n                    search={r => `${r.groupId},${r.protocol},${r.protocolType}`}\n                    rows={this.state.rows}\n                    raw={this.state.rows.map(r => r.raw)}\n                    url={this.url}\n                    columnDefs={this.getColumnDefs()}>\n                </DataView>}\n            </>\n        )\n    }\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { CancelToken, Loader } from \"../components/loader\";\n\n// type State = {\n//     loading: boolean;\n//     error: any;\n//     rows: any[];\n// }\n\nexport class Members extends React.Component  {\n    state= { loading: true, rows: [], error: \"\" }\n    url;\n    loader = new Loader()\n\n    constructor(props) {\n        super(props);\n        this.url = new Url(props.location.search, ``);\n    }\n\n    async componentDidMount() {\n        await this.loader.Load(this.fetchMembers)\n    }\n\n    componentWillUnmount() {\n        this.loader.Abort()\n    }\n\n    fetchMembers = async (cancelToken) => {\n        const data = await cancelToken.Fetch(`/api/members/${this.props.match.params.group}`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error })\n            return\n        }\n        this.setState({ loading: false, rows: data })\n    }\n\n    getColumnDefs() {\n        return [\n            { headerName: \"Member ID\", field: \"memberId\" },\n            { headerName: \"Client ID\", field: \"clientId\" },\n            { headerName: \"Client Host\", field: \"clientHost\" },\n        ]\n    }\n\n    render() {\n        return (\n            <>\n                <KafkaToolbar\n                    title={`Members for group: ${this.props.match.params.group}`}\n                    url={this.url}\n                >\n                </KafkaToolbar>\n                {this.state.loading && <><CircularProgress /><div>Loading...</div></>}\n                <ErrorMsg error={this.state.error} prefix=\"Failed to fetch members. Error: \"></ErrorMsg>\n                {!this.state.loading && <DataView\n                    search={r => `${r.memberId},${r.clientId},${r.clientHost}`}\n                    rows={this.state.rows}\n                    raw={this.state.rows}\n                    url={this.url}\n                    columnDefs={this.getColumnDefs()}>\n                </DataView>}\n            </>\n        )\n    }\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { CellProps, CellButton } from '../components/cell_button';\nimport { GridApi, ColumnApi, GridReadyEvent } from 'ag-grid-community';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { GetSubjectsResult, GetSubjectVersionsResult } from \"../shared/api\";\nimport { History } from 'history';\nimport { CancelToken, Loader } from \"../components/loader\";\n\n// type State = {\n//     loading: boolean;\n//     rows: Subject[];\n//     error?: string;\n//     errorPrefix: string;\n// }\n\nclass ViewVersionsButton {\n    render() {\n        return <CellButton getUrl={() => `/schema-registry/versions/${this.props.data.subject}`} {...this.props} />\n    }\n}\n\n// type Subject = {\n//     subject: string,\n//     versions?: GetSubjectVersionsResult,\n//     num_versions?: number,\n//     history: History<unknown>,\n// }\n\nexport class Subjects extends React.Component {\n    state = { loading: true, rows: [], error: \"\", errorPrefix: \"\" }\n    gridApi = null;\n    columnApi = null;\n    url;\n    loader = new Loader()\n\n    constructor(props) {\n        super(props);\n        this.url = new Url(props.location.search, ``);\n    }\n\n    onGridReady = (params) => {\n        this.gridApi = params.api;\n        this.columnApi = params.columnApi;\n    }\n\n    async componentDidMount() {\n        await this.loader.Load(this.fetchSubjects)\n    }\n\n    componentWillUnmount() {\n        this.loader.Abort()\n    }\n\n    fetchSubjects = async (cancelToken) => {\n        const data = await cancelToken.Fetch(`/api/schema-registry/subjects`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({ loading: false, error: data.error, errorPrefix: \"Failed to fetch subjects. Error: \"})\n            return\n        }\n        const results = data.map(r => (\n            { subject: r, history: this.props.history }))\n        this.setState({ loading: false, rows: results })\n        for (const subject of results) {\n            await this.fetchSubject(subject, cancelToken)\n            if (cancelToken.Aborted) return\n        }\n    }\n\n    async fetchSubject(subject, cancelToken) {\n        const data = await cancelToken.Fetch(`/api/schema-registry/versions/${subject.subject}`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({ loading: false, error: data.error, errorPrefix: `Failed to fetch subject ${subject.subject}. Error: `})\n            return\n        }\n        subject.num_versions = data.length\n        subject.versions = data\n        if (this.gridApi) {\n            this.gridApi.refreshCells()\n        }\n        this.forceUpdate();\n    }\n\n    getColumnDefs() {\n        return [\n            { headerName: \"Subject\", field: \"subject\" },\n            { headerName: \"#Versions\", field: \"num_versions\", filter: \"agNumberColumnFilter\", cellRendererFramework: ViewVersionsButton },\n        ]\n    }\n\n    render() {\n        return (\n            <>\n                <KafkaToolbar\n                    title=\"Subjects\"\n                    url={this.url}\n                >\n                </KafkaToolbar>\n                {this.state.loading && <><CircularProgress /><div>Loading...</div></>}\n                <ErrorMsg error={this.state.error} prefix={this.state.errorPrefix}></ErrorMsg>\n                {!this.state.loading && <DataView\n                    search={(r) => r.subject}\n                    rows={this.state.rows}\n                    raw={this.state.rows.map(r => ({subject: r.subject, versions: r.versions}))}\n                    url={this.url}\n                    columnDefs={this.getColumnDefs()}\n                    onGridReady={this.onGridReady}\n                    >\n                </DataView>}\n            </>\n        )\n    }\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { GridApi, ColumnApi, GridReadyEvent } from 'ag-grid-community';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { GetSchemaResult, GetSubjectVersionsResult } from \"../shared/api\";\nimport { Schema } from \"avsc\";\nimport { CancelToken, Loader } from \"../components/loader\";\n\n\n// type State = {\n//     loading: boolean;\n//     rows: any[];\n//     customCols: {cols: {}};\n//     error?: string;\n//     errorPrefix: string;\n// }\n\n// interface Field {\n//     name: string;\n//     doc?: string;\n//     type: Schema;\n//     default?: any;\n//     order?: \"ascending\" | \"descending\" | \"ignore\";\n// }\n\n// interface RecordType {\n//     type: \"record\" | \"error\";\n//     name: string;\n//     namespace?: string;\n//     doc?: string;\n//     aliases?: string[];\n//     fields: Field[];\n// }\n\n// type Version = {\n//     version: number,\n//     schema?: Schema,\n//     schemaID?: number,\n//     [key: string]: any,\n// }\n\n// interface EnumType {\n//     type: \"enum\";\n//     name: string;\n//     namespace?: string;\n//     aliases?: string[];\n//     doc?: string;\n//     symbols: string[];\n// }\n\nexport class Versions extends React.Component {\n    state = { loading: true, rows: [], customCols: {cols: {}}, error: \"\", errorPrefix: \"\" }\n    gridApi = null\n    columnApi = null\n    url;\n    loader = new Loader()\n\n    constructor(props) {\n        super(props);\n        this.url = new Url(props.location.search, ``);\n    }\n\n    onGridReady = (params) => {\n        this.gridApi = params.api;\n        this.columnApi = params.columnApi;\n    }\n\n    async componentDidMount() {\n        await this.loader.Load(this.fetchVersions)\n    }\n\n    componentWillUnmount() {\n        this.loader.Abort()\n    }\n\n    fetchVersions = async (cancelToken) => {\n        const data = await cancelToken.Fetch(`/api/schema-registry/versions/${this.props.match.params.subject}`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error, errorPrefix: \"Failed to fetch versions. Error: \"})\n            return\n        }\n        const results = data.map(r => (\n            { version: r }))\n        this.setState({ loading: false, rows: results })\n        const customCols = {cols: {}}\n        for (const version of results) {\n            await this.fetchSchema(version, customCols, cancelToken)\n            if (cancelToken.Aborted) return\n        }\n        this.setState({customCols})\n    }\n\n    async fetchSchema(version, customCols, cancelToken) {\n        const data = await cancelToken.Fetch(`/api/schema-registry/schema/${this.props.match.params.subject}/${version.version}`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error, errorPrefix: `Failed to fetch schema for version ${version.version}. Error: `})\n            return\n        }\n        version.schema = data.schema\n        version.schemaID = data.id\n        this.addToRow(version, data.schema, customCols, \"\")\n        if (this.gridApi) {\n            this.gridApi.refreshCells()\n        }\n        this.forceUpdate();\n    }\n\n    addToRow = (row, record, customCols, prefix) => {\n        if (record.fields === undefined) {\n            return\n        }\n        for (const field of record.fields) {\n            const name = `${prefix}${field.name}`\n            const innerRecord = field.type \n            if (typeof innerRecord === \"object\" && innerRecord.type === \"record\") {\n                this.addToRow(row, innerRecord, customCols, `${name}->`)\n                continue\n            }\n            row[name] = this.getFieldValue(field)\n            customCols.cols[name] = row[name]\n        }\n    }\n\n    getFieldValue(field) {\n        if (typeof field.type === \"string\") {\n            return field.type\n        }\n        const enumType = field.type \n        if (enumType.type === \"enum\") {\n            const symbols = enumType.symbols.join(`, `)\n            return `${enumType.name} (${symbols})`\n        }\n        if (Array.isArray(field.type)) {\n            const union = field.type.join(`, `)\n            return `union{ ${union} }`\n        }\n        return `Unsupported Type`\n    }\n\n    getColumnDefs() {\n        const cols = [\n            { headerName: \"Schema ID\", field: \"schemaID\", filter: \"agNumberColumnFilter\" },\n            { headerName: \"Version\", field: \"version\", filter: \"agNumberColumnFilter\" },\n            { headerName: \"Type\", field: \"schema.type\" },\n            { headerName: \"Name\", field: \"schema.name\" },\n            { headerName: \"Namespace\", field: \"schema.namespace\" },\n        ]\n        this.addCustomColumns(cols, this.state.customCols.cols, ``)\n        return cols\n    }\n\n    addCustomColumns = (cols, fields, prefix) => {\n        for (const prop in fields) {\n            const val = fields[prop]\n            if (typeof val === 'object') {\n                this.addCustomColumns(cols, val, `${prefix}${prop}.`)\n            } else {\n                const name = `${prefix}${prop}`\n                cols.push({headerName: name, field: name})\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <KafkaToolbar\n                    title={`Schemas for subject ${this.props.match.params.subject}`}\n                    url={this.url}\n                >\n                </KafkaToolbar>\n                {this.state.loading && <><CircularProgress /><div>Loading...</div></>}\n                <ErrorMsg error={this.state.error} prefix={this.state.errorPrefix}></ErrorMsg>\n                {!this.state.loading && <DataView\n                    search={(r) => JSON.stringify(r.schema ?? \"\")}\n                    rows={this.state.rows}\n                    raw={this.state.rows.map(r => ({version: r.version, schema: r.schema}))}\n                    url={this.url}\n                    columnDefs={this.getColumnDefs()}\n                    onGridReady={this.onGridReady}\n                    >\n                </DataView>}\n            </>\n        )\n    }\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { ConnectorConfig, ConnectorState, GetConnectorConfigResult, GetConnectorsResult, GetConnectorStatusResult } from \"../shared/api\";\nimport { CellButton, CellProps } from \"../components/cell_button\";\nimport { ColDef, GridApi, GridReadyEvent } from \"ag-grid-community\";\nimport { History } from 'history';\nimport { CancelToken, Loader } from \"../components/loader\";\n\n// type State = {\n//     loading: boolean;\n//     error?: string;\n//     customCols: {cols: {}};\n//     rows: Connector[];\n// }\n\n// type Connector = {\n//     name: string;\n//     state: ConnectorState | \"Loading\";\n//     workerId: string | \"Loading\";\n//     numTasks?: number;\n//     type: string | \"Loading\";\n//     config?: ConnectorConfig;\n//     history: History<unknown>;\n// }\n\nclass ViewTasksButton  {\n    render() {\n        return <CellButton getUrl={() => `/kafka-connect/tasks/${this.props.data.name}`} {...this.props} />\n    }\n}\n\n//this is needed for ag-grid to correctly detect the field mappings (it interprets dots as deep references)\nexport function ReplaceDots(data) {\n    const res = {}\n    for (const prop in data) {\n        res[prop.split('.').join('->')] = data[prop]\n    }\n    return res\n}\n\nexport class Connectors extends React.Component  {\n    state = { loading: true, customCols: {cols: {}}, rows: [], error: \"\" }\n    gridApi = null;\n    url;\n    loader = new Loader()\n\n    constructor(props) {\n        super(props);\n        this.url = new Url(props.location.search, ``);\n    }\n\n    onGridReady = (params) => {\n        this.gridApi = params.api;\n    }\n\n    async componentDidMount() {\n        await this.loader.Load(this.fetchConnectors)\n    }\n\n    componentWillUnmount() {\n        this.loader.Abort()\n    }\n\n    fetchConnectors = async (cancelToken) => {\n        const data = await cancelToken.Fetch(`/api/kafka-connect/connectors`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error})\n            return\n        }\n        const rows = data.map(c => ({name: c, state: \"Loading\", workerId: \"Loading\", type: \"Loading\", history: this.props.history}))\n        this.setState({ loading: false, rows })\n        for (const connector of rows) {\n            await this.fetchConnector(connector, cancelToken)\n        }\n    }\n\n    async fetchConnector(connector, cancelToken) {\n        await this.fetchConnectorStatus(connector, cancelToken)\n        if (cancelToken.Aborted) return\n        await this.fetchConnectorConfig(connector, cancelToken)\n        if (cancelToken.Aborted) return\n    }\n\n    async fetchConnectorStatus(connector, cancelToken) {\n        const data = await cancelToken.Fetch(`/api/kafka-connect/connector/${connector.name}/status`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error})\n            return\n        }\n        connector.numTasks = data.tasks.length\n        connector.state = data.connector.state\n        connector.workerId = data.connector.worker_id\n        connector.type = data.type\n        if (this.gridApi) {\n            this.gridApi.refreshCells()\n        }\n        this.forceUpdate();\n    }\n\n    async fetchConnectorConfig(connector, cancelToken) {\n        let data = await cancelToken.Fetch(`/api/kafka-connect/connector/${connector.name}/config`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error})\n            return\n        }\n        data = ReplaceDots(data)\n        connector.config = data\n        this.state.customCols.cols = {...this.state.customCols.cols, ...data}\n        this.refreshGrid()\n    }\n\n    refreshGrid() {\n        if (this.gridApi) {\n            this.gridApi.refreshCells({force: true})\n        }\n        this.forceUpdate();\n    }\n\n    getColumnDefs() {\n        const cols = [\n            { headerName: \"Name\", field: \"name\" },\n            { headerName: \"State\", field: \"state\", type: \"connectorState\" },\n            { headerName: \"Worker ID\", field: \"workerId\" },\n            { headerName: \"Type\", field: \"type\" },\n            { headerName: \"#Tasks\", field: \"numTasks\", filter: \"agNumberColumnFilter\", cellRendererFramework: ViewTasksButton },\n        ]\n        for (const prop in this.state.customCols.cols) {\n            const field = `config.${prop}`\n            const orig = prop.split('->').join('.')\n            const headerName = `config.${orig}`\n            cols.push({headerName, field})\n        }\n        return cols\n    }\n\n    render() {\n        return (\n            <>\n                <KafkaToolbar\n                    title=\"Connectors\"\n                    url={this.url}\n                    OnThemeChanged={ _ => this.refreshGrid()}\n                >\n                </KafkaToolbar>\n                {this.state.loading && <><CircularProgress /><div>Loading...</div></>}\n                <ErrorMsg error={this.state.error} prefix=\"Failed to fetch connectors. Error: \"></ErrorMsg>\n                {!this.state.loading && <DataView\n                    search={(r) => `${r.name},${r.state},${r.type},${r.workerId}`}\n                    rows={this.state.rows}\n                    raw={this.state.rows}\n                    url={this.url}\n                    columnDefs={this.getColumnDefs()}\n                    onGridReady={this.onGridReady}>\n                </DataView>}\n            </>\n        )\n    }\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { ConnectorConfig, ConnectorState, GetConnectorTasksResult, GetConnectorTaskStatusResult } from \"../shared/api\";\nimport { ColDef, GridApi, GridReadyEvent } from \"ag-grid-community\";\nimport { ReplaceDots } from \"./connectors\";\nimport { CancelToken, Loader } from \"../components/loader\";\n\n// type State = {\n//     loading: boolean;\n//     error?: string;\n//     customCols: {cols: {}};\n//     rows: Task[];\n// }\n\n// type Task = {\n//     id: number;\n//     state: ConnectorState | \"Loading\";\n//     workerId: string | \"Loading\";\n//     config: ConnectorConfig;\n// }\n\nexport class Tasks extends React.Component  {\n    state = { loading: true, customCols: {cols: {}}, rows: [], error: \"\" }\n    gridApi = null;\n    url;\n    loader = new Loader()\n\n    constructor(props) {\n        super(props);\n        this.url = new Url(props.location.search, ``);\n    }\n\n    onGridReady = (params) => {\n        this.gridApi = params.api;\n    }\n\n    async componentDidMount() {\n        await this.loader.Load(this.fetchTasks)\n    }\n\n    componentWillUnmount() {\n        this.loader.Abort()\n    }\n\n    fetchTasks = async (cancelToken) => {\n        const data = await cancelToken.Fetch(`/api/kafka-connect/connector/${this.props.match.params.connector}/tasks`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error})\n            return\n        }\n        const rows = []\n        for (const c of data) {\n            const config = ReplaceDots(c.config)\n            rows.push({id: c.id.task, state: \"Loading\", workerId: \"Loading\", config })\n            this.state.customCols.cols = {...this.state.customCols.cols, ...config}\n        }\n        this.setState({ loading: false, rows })\n        for (const c of rows) {\n            await this.fetchTaskStatus(c, cancelToken)\n            if (cancelToken.Aborted) return\n        }\n    }\n\n    async fetchTaskStatus(task, cancelToken) {\n        const data = await cancelToken.Fetch(`/api/kafka-connect/connector/${this.props.match.params.connector}/tasks/${task.id}/status`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error})\n            return\n        }\n        task.state = data.state\n        task.workerId = data.worker_id\n        this.refreshGrid()\n    }\n\n    refreshGrid() {\n        if (this.gridApi) {\n            this.gridApi.refreshCells()\n        }\n        this.forceUpdate();\n    }\n\n    getColumnDefs() {\n        const cols = [\n            { headerName: \"ID\", field: \"id\" },\n            { headerName: \"State\", field: \"state\", type: \"connectorState\" },\n            { headerName: \"Worker ID\", field: \"workerId\" },\n        ]\n        for (const prop in this.state.customCols.cols) {\n            const field = `config.${prop}`\n            const orig = prop.split('->').join('.')\n            const headerName = `config.${orig}`\n            cols.push({headerName, field})\n        }\n        return cols\n    }\n\n    render() {\n        return (\n            <>\n                <KafkaToolbar\n                    title={`Tasks for connector: ${this.props.match.params.connector}`}\n                    url={this.url}\n                    OnThemeChanged={_ => this.refreshGrid()}\n                >\n                </KafkaToolbar>\n                {this.state.loading && <><CircularProgress /><div>Loading...</div></>}\n                <ErrorMsg error={this.state.error} prefix=\"Failed to fetch tasks. Error: \"></ErrorMsg>\n                {!this.state.loading && <DataView\n                    search={(r) => `${r.state},${r.workerId}`}\n                    rows={this.state.rows}\n                    raw={this.state.rows}\n                    url={this.url}\n                    columnDefs={this.getColumnDefs()}\n                    onGridReady={this.onGridReady}>\n                </DataView>}\n            </>\n        )\n    }\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { KafkaToolbar } from '../components/toolbar';\nimport { DataView } from '../components/data_view';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { GetBrokerConfigsResult } from \"../shared/api\";\nimport { ConfigEntries } from \"kafkajs\";\nimport { CancelToken, Loader } from \"../components/loader\";\n\n// type State = {\n//     loading: boolean;\n//     error?: string;\n//     rows: ConfigEntries[];\n//     data?: GetBrokerConfigsResult;\n// }\n\n// export interface BrokerConfigLinkProps {\n//     data: { configName: string };\n// }\n\nconst BrokerConfigLink = (props) => {\n    return (\n    <Link rel=\"noopener noreferrer\" color=\"primary\" target=\"_blank\" href={`https://docs.confluent.io/current/installation/configuration/broker-configs.html#${props.data.configName}`}>\n                {props.data.configName}\n    </Link>)\n}\n\nexport class BrokerConfigs extends React.Component  {\n    state= { loading: true, rows: [], data: undefined, error: \"\" }\n    url;\n    loader = new Loader()\n\n    constructor(props) {\n        super(props);\n        this.url = new Url(props.location.search, ``);\n    }\n\n    async componentDidMount() {\n        await this.loader.Load(this.fetchConfigs)\n    }\n\n    componentWillUnmount() {\n        this.loader.Abort()\n    }\n\n    fetchConfigs = async(cancelToken) => {\n        const data = await cancelToken.Fetch(`/api/broker/${this.props.match.params.broker}/config`)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            this.setState({loading: false, error: data.error })\n            return\n        }\n        const results = data.resources[0].configEntries\n        this.setState({ data, loading: false, rows: results })\n    }\n\n    getColumnDefs() {\n        return [\n            { headerName: \"Name\", field: \"configName\", cellRendererFramework: BrokerConfigLink },\n            { headerName: \"Value\", field: \"configValue\" },\n            { headerName: \"Readonly\", field: \"readOnly\" },\n            { headerName: \"Is Default\", field: \"isDefault\"},\n            { headerName: \"Is Sensitive\", field: \"isSensitive\"},\n        ]\n    }\n\n    render() {\n        return (\n            <>\n                <KafkaToolbar\n                    title={`Configs for broker: ${this.props.match.params.broker}`}\n                    url={this.url}\n                >\n                </KafkaToolbar>\n                {this.state.loading && <><CircularProgress /><div>Loading...</div></>}\n                <ErrorMsg error={this.state.error} prefix=\"Failed to fetch configs. Error: \"></ErrorMsg>\n                {!this.state.loading && <DataView\n                    search={(r) => r.configName}\n                    rows={this.state.rows}\n                    raw={this.state.data?.resources ?? []}\n                    url={this.url}\n                    columnDefs={this.getColumnDefs()}>\n                </DataView>}\n            </>\n        )\n    }\n}","import React, {createContext, useState} from \"react\";\r\nimport { Route, HashRouter as Router, Link } from 'react-router-dom'\r\nimport  Portfolios  from \"./business/portfolios\"\r\nimport  Topics  from \"./business/topics\"\r\nimport  Schemas  from \"./business/schemas\"\r\nimport { Partitions } from \"./kafka/partitions\"\r\nimport { Messages } from \"./kafka/messages/messages\"\r\nimport { TopicConfigs } from \"./kafka/topic_configs\"\r\nimport { TopicGroups } from \"./kafka/topic_groups\"\r\nimport { Brokers } from \"./kafka/brokers\"\r\nimport { Groups } from \"./kafka/groups\"\r\nimport { Members } from \"./kafka/members\"\r\nimport { Subjects } from \"./schema-registry/subjects\"\r\nimport { Versions } from \"./schema-registry/versions\"\r\nimport { GlobalThemeProvider } from \"./components/theme_hook\"\r\nimport GridContext  from './business/gridContext'\r\nimport \"./style.css\";\r\nimport { Connectors } from \"./kafka-connect/connectors\";\r\nimport { Tasks } from \"./kafka-connect/tasks\";\r\nimport { BrokerConfigs } from \"./kafka/broker_configs\";\r\n\r\n\r\n\r\nconst App = () => {\r\n\tconst [gridTopic, setGridTopic] = useState('')\r\n\tconst gridUpdate = (obj) => {\r\n\t\tlet {newTopic} = obj \r\n\t\tsetGridTopic(newTopic)\r\n\t}\r\n\treturn (\r\n\t\t<GlobalThemeProvider>\r\n\t\t\t<GridContext.Provider value={{gridTopic, gridUpdate}} >\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Route path='/' exact component={Portfolios} />\t\t\t\t\r\n\t\t\t\t\t\t<Route path=\"/topic/:topic\"> <Topics/> </Route>\r\n\t\t\t\t\t\t<Route path=\"/schema/:schema\"> <Schemas/> </Route>\r\n\t\t\t\t\t\t<Route path=\"/topic/partitions/:topic\" exact component={Partitions} />\r\n\t\t\t\t\t\t<Route path=\"/topic/configs/:topic\" exact component={TopicConfigs} />\r\n\t\t\t\t\t\t<Route path=\"/topic/consumer_groups/:topic\" exact component={TopicGroups} />\r\n\t\t\t\t\t\t<Route path=\"/topic/messages/:topic/:partition\" component={Messages} />\r\n\t\t\t\t\t\t<Route path=\"/topic/messages/:topic\" exact component={Messages} />\r\n\t\t\t\t\t\t<Route path=\"/topics/messages/:topics\" exact component={Messages} />\r\n\t\t\t\t\t\t<Route path=\"/topics/messages\" exact component={Messages} />\r\n\t\t\t\t\t\t<Route path=\"/brokers\" exact component={Brokers} />\r\n\t\t\t\t\t\t<Route path=\"/broker/configs/:broker\" exact component={BrokerConfigs} />\r\n\t\t\t\t\t\t<Route path=\"/groups\" exact component={Groups} />\r\n\t\t\t\t\t\t<Route path=\"/members/:group\" exact component={Members} />\r\n\t\t\t\t\t\t<Route path=\"/schema-registry/subjects\" exact component={Subjects} />\r\n\t\t\t\t\t\t<Route path=\"/schema-registry/versions/:subject\" exact component={Versions} />\r\n\t\t\t\t\t\t<Route path=\"/kafka-connect/connectors\" exact component={Connectors} />\r\n\t\t\t\t\t\t<Route path=\"/kafka-connect/tasks/:connector\" exact component={Tasks} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Router>\r\n\t\t\t</GridContext.Provider>\r\n\t\t</GlobalThemeProvider>\r\n\t)\r\n};\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}
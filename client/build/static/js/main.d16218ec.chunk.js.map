{"version":3,"sources":["components/theme_hook.js","components/url.js","components/toolbar.js","components/use_search.js","components/grid.js","components/card_view.js","components/data_view.js","components/error_msg.js","components/loader.js","business/gridContext.js","business/portfolios.js","business/topics.js","business/schemas.js","business/algorithms.js","App.js","index.js","shared/search.js"],"names":["ThemeContext","React","createContext","GlobalThemeProvider","children","theme","defaultTheme","window","localStorage","getItem","prefersDarkMode","useMediaQuery","useState","currentTheme","setCurrentTheme","palette","type","primary","main","secondary","materialTheme","useMemo","createMuiTheme","Provider","value","saveTheme","values","setItem","ThemeProvider","CssBaseline","useTheme","useContext","Url","location","baseUrl","obj","BaseUrl","subscribers","startsWith","substring","this","qs","parse","name","toString","undefined","props","prop","val","Refresh","callback","push","index","indexOf","splice","query","stringify","url","history","replaceState","document","title","subscriber","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","ThemeToggle","ToggleButtonGroup","exclusive","onChange","event","newTheme","OnThemeChanged","aria-label","ToggleButton","htmlColor","SearchButtonGroup","withStyles","grouped","margin","border","useSearchButtonStyles","selectColor","hoverColor","selected","SearchToggleButton","other","classes","KafkaToolbar","anchorElement","setAnchorElement","Get","searchStyle","setSearchStyle","searchPattern","setSearchPattern","searchButtonColor","_","searchButtonSelectedColor","searchButtonHoverColor","menuOpen","Boolean","className","AppBar","Toolbar","IconButton","edge","onClick","console","log","currentTarget","id","anchorEl","keepMounted","transformOrigin","vertical","horizontal","open","onClose","Link","href","MenuItem","Divider","Typography","variant","noWrap","hideSearch","InputBase","placeholder","input","inputProps","endAdornment","InputAdornment","size","e","Set","Tooltip","path","mdiFormatLetterCase","mdiRegex","target","UseSearch","getSearch","pattern","style","setSearch","useEffect","onUrlChanged","Subscribe","Unsubscribe","Grid","rows","filter","r","Includes","cssTheme","columnDefs","rowData","domLayout","defaultColDef","sortable","resizable","onGridReady","onFilterChanged","enableCellTextSelection","pagination","columnTypes","connectorState","cellStyle","params","CardView","raw","filterJson","jsonTheme","src","Array","isArray","filterArray","filterObject","res","item","filtered","isEmpty","key","Object","keys","length","TabPanel","role","hidden","aria-labelledby","Box","p","component","DataView","firstTab","tab","setTab","Tabs","newValue","indicatorColor","textColor","Tab","label","ErrorMsg","error","errorMsg","JSON","prefix","Alert","severity","Loader","cancelToken","CancelToken","a","abortController","abort","AbortController","signal","aborted","opts","segment","fetch","method","headers","body","Signal","response","Aborted","text","responseTxt","status","warn","gridContext","topic","gridUpdate","Portfolios","setGridApi","setGridColumnApi","loading","setLoading","setRows","setError","errorPrefix","setErrorPrefix","GridContext","useLocation","loader","Load","fetchPortfolios","getData","urlendpoint","hostname","Fetch","data","results","portfolios","map","cellClick","cellValue","valueFormatted","newTopic","cellRenderList","cellElements","split","c","t","trim","algoRenderList","CircularProgress","headerName","field","cellRenderer","api","columnApi","sizeColumnsToFit","rand","Math","round","random","genData","labels","datasets","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","Topics","thePath","setData","gridTopic","pathname","lastIndexOf","interval","setInterval","clearInterval","Schemas","getTopic","fetchSchemas","Algorithms","fetchAlgorithms","App","setGridTopic","exact","ReactDOM","render","getElementById","exports","SearchStyle","includes","RegExp","test","SyntaxError","toLowerCase"],"mappings":"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","file":"static/js/main.d16218ec.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nexport const ThemeContext = React.createContext(null);\n\nexport const GlobalThemeProvider = ({ children, theme }) => {\n    let defaultTheme = window.localStorage.getItem(`theme`)\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)') //this must be outside of the if clause to maintain the rule of hooks\n    if (!defaultTheme) {\n      defaultTheme = prefersDarkMode ? `dark` : `light`\n    }\n\n    const [currentTheme, setCurrentTheme] = useState(\n        theme || defaultTheme\n    );\n\n    const saveTheme = (values) => {\n        setCurrentTheme(values)\n        window.localStorage.setItem(`theme`, values)\n    };\n\n    let palette = {\n      type: \"light\"\n    }\n\n    if (currentTheme === `dark`) {\n      palette = {\n        type: \"dark\",\n        primary: {\n          main: \"#90caf9\"\n        },\n        secondary: {\n          main: \"#f48fb1\"\n        }\n      }\n    }\n    const materialTheme = React.useMemo(\n\t\t() =>\n\t\t  createMuiTheme({palette}),\n\t\t[currentTheme],\n\t);\n\n    return (\n       <ThemeContext.Provider\n          value={{ theme: currentTheme, saveTheme }}\n       >\n           <ThemeProvider theme={materialTheme}>\n           <CssBaseline />\n          {children}\n          </ThemeProvider>\n       </ThemeContext.Provider>\n    );\n };\n\nexport const useTheme = () => {\n    const context = useContext(ThemeContext)\n    return context\n}","import qs from 'qs'\n\n//export type UrlProperty = `raw` | `search` | `offset` | `limit` | `from_time` | `to_time` | `search_by` | `search_style`\n\nexport class Url {\n    obj = ''\n\n    BaseUrl = ''\n\n    subscribers = []\n\n    constructor(location, baseUrl) {\n        if (location.startsWith(\"?\")) {\n            location = location.substring(1)\n        }\n        this.obj = qs.parse(location)\n        this.BaseUrl = baseUrl\n    }\n\n     Get(name) {\n        return this.obj[name]?.toString() || undefined\n    }\n\n    Set(...props) {\n        for (const prop of props) {\n            if (prop.val) {\n                this.obj[prop.name] = prop.val\n            } else {\n                delete this.obj[prop.name]\n            }\n        }\n        this.Refresh()\n    }\n\n    Subscribe(callback) {\n        this.subscribers.push(callback)\n    }\n\n    Unsubscribe(callback) {\n        const index = this.subscribers.indexOf(callback)\n        if (index > -1) {\n            this.subscribers.splice(index, 1);\n        }\n    }\n\n    Refresh() {\n        const query = qs.stringify(this.obj)\n        const url = query ? `${this.BaseUrl}?${query}` : this.BaseUrl\n\n        //We're using window.history and not the router history because we don't want to navigate away, this is just for sharing url purposes.\n        window.history.replaceState(null, document.title, url || \"?\") //if base url was not set and they are no properties on the url it will be an empty string which seems to be ignored by replaceState so we're defaulting to \"?\"\n        for (const subscriber of this.subscribers) {\n            subscriber(url)\n        }\n    }\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles, withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Divider } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { useTheme } from './theme_hook';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport Icon from '@mdi/react';\nimport { mdiRegex, mdiFormatLetterCase } from '@mdi/js';\nimport { Url } from './url';\nimport { SearchStyle } from '../shared/search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\n// interface ThemeProps {\n//   OnThemeChanged?: (theme: string) => void\n// }\n\nconst ThemeToggle = (props) => {\n  const {theme, saveTheme} = useTheme()\n\n  const handleTheme = (event, newTheme) => {\n    if (newTheme !== null) {\n      saveTheme(newTheme)\n      if (props.OnThemeChanged) {\n        props.OnThemeChanged(newTheme)\n      }\n    }\n  };\n\n  const color = theme === `dark` ? `black` : `white`\n\n  return (\n    <ToggleButtonGroup\n      value={theme}\n      exclusive\n      onChange={handleTheme}\n      aria-label=\"theme selector\"\n    >\n      <ToggleButton value=\"light\" aria-label=\"light theme\">\n        <WbSunnyIcon htmlColor={color} />\n      </ToggleButton>\n      <ToggleButton value=\"dark\" aria-label=\"dark theme\">\n        <NightsStayIcon htmlColor={color} />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n\nconst SearchButtonGroup = withStyles((theme) => ({\n  grouped: {\n    margin: theme.spacing(0),\n    border: 'none',\n    borderRadius: theme.shape.borderRadius,\n  },\n}))(ToggleButtonGroup);\n\nconst useSearchButtonStyles = makeStyles((theme) => ({\n  root: (props) => {\n    return {\n      '&$selected': {\n        backgroundColor: props.selectColor,\n      },\n      '&:hover': {\n        backgroundColor: `${props.hoverColor} !important`,\n      },\n    }\n  },\n  selected: ( {selectColor, hoverColor}) => { return {}},\n}));\n\nfunction SearchToggleButton(props) {\n  const { selectColor, hoverColor, ...other } = props;\n  const classes = useSearchButtonStyles({ selectColor, hoverColor });\n  return <ToggleButton classes={classes} {...other} />;\n}\n\n// interface Props {\n//     title: string;\n//     url: Url;\n//     hideSearch?: boolean;\n//     OnThemeChanged?: (theme: string) => void\n// }\n\nexport const KafkaToolbar = (props) => {\n  const classes = useStyles();\n  const [anchorElement, setAnchorElement] = React.useState(false);\n\n  const [searchStyle, setSearchStyle] = React.useState((props.url.Get(`search_style`) || ``) );\n  const [searchPattern, setSearchPattern] = React.useState((props.url.Get(`search`) || ``) );\n\n  const {theme, _} = useTheme()\n  const searchButtonColor = theme === `dark` ? `dimgray` : `silver`\n  const searchButtonSelectedColor = theme === `dark` ? `rgb(106, 186, 251)` : `rgb(64,82,181)`\n  const searchButtonHoverColor = theme === `dark` ? `rgb(131, 197, 251)` : `rgb(82, 97, 183)`\n\n  const menuOpen = Boolean(anchorElement)\n  const openMenu = (event) => {\n    console.log(`---------------debug toolbar line 166-----`)   \n    setAnchorElement(event.currentTarget);\n  };\n  const closeMenu = () => {\n    setAnchorElement(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={openMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Menu\n                id=\"menu-appbar\" \n                anchorEl={anchorElement}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n                open={menuOpen}\n                onClose={closeMenu}\n              >\n                <Link href=\"/\" color=\"inherit\">\n                  <MenuItem>Portfolio</MenuItem>\n                </Link>\n                <Link href=\"/brokers\" color=\"inherit\">\n                  <MenuItem>Kafka (brokers)</MenuItem>\n                </Link>\n                <Link href=\"/groups\" color=\"inherit\">\n                  <MenuItem>Kafka (groups)</MenuItem>\n                </Link>\n                <Link href=\"/schema-registry/subjects\" color=\"inherit\">\n                  <MenuItem>Schema-Registry (subjects)</MenuItem>\n                </Link>\n                <Link href=\"/kafka-connect/connectors\" color=\"inherit\">\n                  <MenuItem>Kafka-Connect (connectors)</MenuItem>\n                </Link>\n                <Divider/>\n                <Link href=\"/topics/messages\" color=\"inherit\">\n                  <MenuItem><SearchIcon /> Search across topics</MenuItem>\n                </Link>\n            </Menu>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n          <Link href=\"/\" color=\"inherit\">\n            MSS International\n          </Link>\n          </Typography>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            {props.title}\n          </Typography>\n          <ThemeToggle OnThemeChanged={props.OnThemeChanged}/>\n          {!props.hideSearch && (\n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                <SearchIcon />\n                </div>\n                <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                value={searchPattern}\n                endAdornment={\n                  <>\n                  <InputAdornment position=\"end\">\n                  <SearchButtonGroup\n                    size=\"small\"\n                    value={searchStyle}\n                    exclusive\n                    onChange={(e, value) => { setSearchStyle(value); props.url.Set({ name: `search_style`, val: value})}}\n                    aria-label=\"search options\"\n                  >\n                      <SearchToggleButton\n                        selectColor={searchButtonSelectedColor}\n                        hoverColor={searchButtonHoverColor}\n                        aria-label=\"Match Case\"\n                        value=\"case-sensitive\"\n                      >\n                        <Tooltip title=\"Match Case\">\n                          <Icon path={mdiFormatLetterCase} size={1} color={searchButtonColor}/>\n                        </Tooltip>\n                      </SearchToggleButton>\n                      <SearchToggleButton\n                        selectColor={searchButtonSelectedColor}\n                        hoverColor={searchButtonHoverColor}\n                        aria-label=\"Use Regular Expression\"\n                        value=\"regex\"\n                      >\n                        <Tooltip title=\"Use Regular Expression\">\n                          <Icon path={mdiRegex} size={1} color={searchButtonColor}/>\n                        </Tooltip>\n                      </SearchToggleButton>\n                    </SearchButtonGroup>\n                  </InputAdornment>\n                  </>\n                }\n                onChange={e => {\n                  props.url.Set({name: `search`, val: e.target.value})\n                  setSearchPattern(e.target.value)\n                }}\n                />\n            </div>\n          )}\n          <Tooltip title=\"Source Code\" aria-label=\"source code\">\n            <IconButton color=\"inherit\" target=\"_blank\" href=\"https://github.com/pdhoward\">\n                <GitHubIcon />\n            </IconButton>\n          </Tooltip >\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { Url } from \"./url\";\nimport { SearchStyle } from \"../shared/search\";\nimport { useEffect, useState } from \"react\";\n\n// export type Search = {\n//     pattern: string\n//     style: SearchStyle\n// }\n\nexport function UseSearch(url) {\n    function getSearch()  {\n        return {\n            pattern: url.Get(`search`) || ``,\n            style: (url.Get(`search_style`) || ``) \n        }\n    }\n    const [search, setSearch] = useState(getSearch())\n    useEffect(() => {\n        function onUrlChanged(_) {\n            setSearch(getSearch())\n        }\n        url.Subscribe(onUrlChanged)\n        return function cleanup() {\n            url.Unsubscribe(onUrlChanged)\n        }\n    })\n    return search\n}","import React from \"react\";\nimport { AgGridReact } from 'ag-grid-react';\nimport { GridReadyEvent, ColDef, FilterChangedEvent } from 'ag-grid-community';\nimport { useTheme } from './theme_hook'\nimport { Url } from \"./url\";\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine-dark.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { Search, UseSearch } from \"./use_search\";\nimport { Includes } from \"../shared/search\";\n\n// export interface GridProps {\n//     url: Url;\n//     search: (row: any) => string;\n//     rows: any[];\n//     columnDefs: ColDef[];\n//     onGridReady?(event: GridReadyEvent): void;\n//     onFilterChanged?(event: FilterChangedEvent): void;\n// }\n\nexport const Grid = (props) => {\n    const search = UseSearch(props.url)   \n    let rows = props.rows\n    if (search.pattern) {\n        rows = rows.filter(r => Includes(props.search(r), search.pattern, search.style))\n    }\n    const { theme, _ } = useTheme()\n    const cssTheme = theme === `dark` ? `ag-theme-alpine-dark` : `ag-theme-alpine`\n    return (\n        <div className={cssTheme}>\n            <AgGridReact                \n                columnDefs={props.columnDefs}\n                rowData={rows}\n                domLayout='autoHeight'\n                defaultColDef={{ sortable: true, filter: true, resizable: true }}\n                onGridReady={props.onGridReady}\n                onFilterChanged={props.onFilterChanged}\n                enableCellTextSelection={true}\n                pagination={true}\n                columnTypes={\n                    {\n                        connectorState: { cellStyle: params => {\n                            switch (params.value) {\n                                case `RUNNING`:\n                                    return {color: theme === `dark` ? `lightgreen` : `darkgreen` }\n                                case `FAILED`:\n                                    return {color: theme === `dark` ? `lightcoral` : `red`}\n                                case `PAUSED`:\n                                    return {color: theme === `dark` ? `orange` : `darkorange`}\n                                default:\n                                    return {}\n                            }\n                        }},\n                    }\n                }\n            >\n            </AgGridReact>\n        </div>\n    )\n}","import React from \"react\";\nimport { useTheme } from './theme_hook';\nimport ReactJson from 'react-json-view';\nimport { Url } from \"./url\";\nimport { Includes } from \"../shared/search\";\nimport { Search, UseSearch } from \"./use_search\";\n\n// export interface CardViewProps {\n//     raw: any[];\n//     url: Url;\n// }\n\nexport const CardView = (props) => {\n    const search= UseSearch(props.url)\n\n    let raw = props.raw\n    if (search.pattern) {\n        raw = filterJson(props.raw, search)\n    }\n    const { theme, _ } = useTheme()\n    const jsonTheme = theme === `dark` ? `twilight` : undefined\n    return (\n        <ReactJson src={raw} theme={jsonTheme} style={{padding: 10, border: \"solid gray 1px\"}} />\n    )\n}\n\nconst filterJson = (obj, search) => {\n    if (!obj) {\n        return obj\n    }\n    if (Array.isArray(obj)) {\n        return filterArray(obj, search)\n    }\n    if (typeof obj === 'object') {\n        return filterObject(obj, search)\n    }\n    if (Includes(obj.toString(), search.pattern, search.style)) {\n        return obj\n    }\n    return undefined\n}\n\nconst filterArray = (obj, search) => {\n    const res = []\n    for (const item of obj) {\n        const filtered = filterJson(item, search)\n        if (isEmpty(filtered)) {\n            continue\n        }\n        res.push(filtered)\n    }\n    return res\n}\n\nconst filterObject = (obj, search) => {\n    const res = {}\n    for (const key in obj) {\n        if (Includes(key, search.pattern, search.style)) {\n            res[key] = obj[key]\n            continue\n        }\n        const filtered  = filterJson(obj[key], search)\n        if (isEmpty(filtered)) {\n            continue\n        }\n        res[key] = filtered\n    }\n    return res\n}\n\nconst isEmpty = (filtered) => {\n    if (!filtered) {\n        return true\n    }\n    if (typeof filtered === 'object' && Object.keys(filtered).length === 0) {\n        return true\n    }\n    return false\n}","import React, { useState } from \"react\";\nimport { GridProps, Grid } from \"./grid\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { CardView, CardViewProps } from \"./card_view\";\n\n// interface DataViewProps extends GridProps, CardViewProps {}\n\n// interface State {\n//     value: number;\n// }\n\n// interface TabPanelProps {\n//     children?: React.ReactNode;\n//     index: number;\n//     value: number;\n// }\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`tabpanel-${index}`}\n        aria-labelledby={`tab-${index}`}\n        {...other}\n        >\n        {value === index && (\n            <Box p={3}>\n                <Typography component='span'>{children}</Typography>\n            </Box>\n        )}\n        </div>\n    );\n}\n\nexport const DataView = (props) => {\n    const showRaw = props.url.Get(`raw`) === `true`\n    const firstTab = showRaw ? 1 : 0;\n    const [tab, setTab] = useState(firstTab)\n\n    const handleTabChange = (_, newValue) => {\n        setTab(newValue)\n        props.url.Set({name: `raw`, val: newValue === 1 ? `true` : ``})\n    };\n\n    return (\n        <>\n        <Tabs value={tab} onChange={handleTabChange} aria-label=\"raw or grid mode selection\"\n        indicatorColor=\"secondary\"\n        textColor=\"secondary\">\n            <Tab label=\"Grid\"></Tab>\n            <Tab label=\"Raw\"></Tab>\n        </Tabs>\n        <TabPanel value={tab} index={0}>\n            <Grid {...props}></Grid>\n        </TabPanel>\n        <TabPanel value={tab} index={1}>\n            <CardView {...props}></CardView>\n        </TabPanel>\n        </>\n    )\n}\n","import React from \"react\";\nimport Alert from '@material-ui/lab/Alert';\n\n// interface ErrorProps {\n//     prefix?: string\n//     error?: string\n// }\n\nexport const ErrorMsg = (props) => {\n    if (!props.error) {\n        return null\n    }\n    let errorMsg = props.error\n    if (typeof errorMsg === `object`) {\n        errorMsg = JSON.stringify(errorMsg)\n    }\n    errorMsg = `${props.prefix}${errorMsg}`\n    return (<Alert severity=\"error\">{errorMsg}</Alert>)\n}","\n\n\nexport class Loader {\n    cancelToken = null;\n\n    async Load(CancelToken) {\n        this.cancelToken = new CancelToken();\n        try {\n            await this.cancelToken\n        } catch (error) {\n            if (error.name === 'AbortError') {\n                return\n            }\n            throw(error)\n        }\n        finally {\n            this.cancelToken = null\n        }\n    }\n\n    Abort() {\n        this.cancelToken.abortController.abort();\n    }\n}\n\nexport class CancelToken {    l\n    \n    abortController = new AbortController()\n\n    get Signal() {\n        return this.abortController.signal\n    }\n\n    get Aborted()  {\n        return this.abortController.signal.aborted\n    }\n\n   async Fetch(url, opts = {segment: 'empty'}) {  \n       console.log(`---inside loader l 40---`)  \n       console.log(opts)\n       console.log(url)\n        try {\n            const response = await fetch(url, { \n                                    method: 'POST', \n                                    headers: { \"Content-Type\": \"application/json\" },\n                                    body: JSON.stringify(opts), \n                                    signal: this.Signal})\n            if (this.Aborted) return null\n            try {\n                const responseTxt = await response.text()\n                try {\n                    const body = JSON.parse(responseTxt)\n                    if(!body.error && response.status >= 400) {\n                        return { error: `fetch from ${url} returned status code ${response.status}, response: ${responseTxt}` }\n                    }                   \n                    return body\n                } catch (jsonErr) {\n                    if (this.Aborted) return null\n                    console.warn(`unable to parse response json:`, jsonErr)\n                    return { error: `fetch from ${url} returned status code ${response.status}, text: ${responseTxt}`}\n                }\n            } catch (txtErr) {\n                if (this.Aborted) return null\n                console.warn(`unable to parse response text:`, txtErr)\n                return { error: `fetch from ${url} returned status code ${response.status}`}\n            }\n        } catch (error) {\n            if (this.Aborted) return null\n            return { error: `fetch from ${url} errored: ${error}`}\n        }\n    }\n}","import React, {createContext} from 'react'\r\n\r\nconst gridContext = createContext({topic: null, gridUpdate: () => {}})\r\n\r\nexport default gridContext","import React, {useState, useEffect, useContext} from \"react\";\nimport {useLocation} from 'react-router-dom'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { CancelToken, Loader } from \"../components/loader\";\nimport GridContext from \"./gridContext\"\n\n\nconst Portfolios = (props) => {    \n    const [gridApi, setGridApi] = useState(null)\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const [loading, setLoading] = useState(true)\n    const [rows, setRows] = useState([])\n    const [error, setError] = useState(\"\")\n    const [errorPrefix, setErrorPrefix] = useState(\"\")\n\n    const {gridUpdate} = useContext(GridContext)   \n    \n    let location = useLocation()    \n    let url = new Url(location.search, ``)\n    let loader= new Loader();     \n    \n\n    let onGridReady = (params) => {        \n       setGridApi(params.api)\n       setGridColumnApi(params.columnApi)\n       params.api.sizeColumnsToFit()\n       \n    }\n\n    useEffect(() => {       \n\n        async function getData() {           \n            await loader.Load(fetchPortfolios)          \n        }\n      \n        getData();\n     },[]);\n    \n    let fetchPortfolios = async (cancelToken = new CancelToken()) => {\n        let urlendpoint = ''\n        if (window.location.hostname == 'localhost' ) {\n            urlendpoint = `http://${'localhost:9999'}${'/api/portfolios'}`   \n        } else {\n            urlendpoint = 'https://mssworkbench.onrender.com/api/portfolios'  \n        }\n      \n        const data = await cancelToken.Fetch(urlendpoint)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            setLoading(false)\n            setError(data.error)\n            setErrorPrefix(\"Failed to fetch portfolios. Error: \")           \n            return\n        }       \n        const results = data.portfolios.map(r => (\n            { ...r,\n              raw: r, \n              history: props.history } ))\n\n        setLoading(false)       \n        setRows(results)     \n    }\n\n    const cellClick = (props) => {        \n        const cellValue = props.valueFormatted ? props.valueFormatted : props.value; \n        gridUpdate({newTopic: cellValue})  \n        let url = `/topic/${cellValue}`       \n        return (\n            \"<a href='\" + url + \"' target='_blank'>\" + cellValue + \"</a>\"\n          );         \n     }\n\n    const cellRenderList = props => {\n        const cellValue = props.valueFormatted ? props.valueFormatted : props.value;        \n        let cellArray = []       \n        if (typeof cellValue == 'string') {\n            cellArray = cellValue.split(',')\n        } else {\n            cellArray = [\"undefined\"]\n        }       \n        let cellElements = cellArray.map(c => {\n            let t = c.trim()\n            return `<a href=\"/schema/${t}\">${c}</a>`\n        })      \n        return (\n            `<div>\n                ${cellElements.map(c => c)}                \n            </div>`           \n        );       \n     }\n     const algoRenderList = props => {\n        const cellValue = props.valueFormatted ? props.valueFormatted : props.value;        \n        let cellArray = []       \n        if (typeof cellValue == 'string') {\n            cellArray = cellValue.split(',')\n        } else {\n            cellArray = [\"undefined\"]\n        }       \n        let cellElements = cellArray.map(c => {\n            let t = c.trim()\n            return `<a href=\"/algorithm/${t}\">${c}</a>`\n        })      \n        return (\n            `<div>\n                ${cellElements.map(c => c)}                \n            </div>`           \n        );       \n     }\n\n    const getColumnDefs = () => {\n        return [\n            { headerName: \"Topic\", field: \"topic\", cellRenderer: cellClick },\n            { headerName: \"Geo\", field: \"geography\", filter: \"agTextColumnFilter\" },\n            { headerName: \"Division\", field: \"division\", filter: \"agTextColumnFilter\" },           \n            { headerName: \"Business Process\", field: \"business_process\", filter: \"agTextColumnFilter\" },\n            { headerName: \"Sub Process\", field: \"sub_process\", filter: \"agTextColumnFilter\" },\n            { headerName: \"Topic Descr.\", field: \"topic_description\", filter: \"agTextColumnFilter\" },\n            { headerName: \"Source Schemas\", field: \"source_schemas\", filter: \"agTextColumnFilter\", cellRenderer: cellRenderList  },\n            { headerName: \"Target Schemas\", field: \"target_schemas\", filter: \"agTextColumnFilter\", cellRenderer: cellRenderList},\n            { headerName: \"Algorithms\", field: \"algorithms\", filter: \"agTextColumnFilter\", cellRenderer: algoRenderList},\n        ]\n    }\n   \n    return (\n        <>\n            <KafkaToolbar\n                title=\"Portfolio\"\n                url={url}\n            >\n            </KafkaToolbar>\n            {loading && <><CircularProgress /><div>Loading...</div></>}\n            <ErrorMsg error={error} prefix={errorPrefix}></ErrorMsg>\n            {!loading && <DataView\n                search={(r) => r.topic}\n                rows={rows}\n                raw={rows.map(r => ({...r.raw}))}\n                url={url}\n                columnDefs={getColumnDefs()}\n                onGridReady={onGridReady}\n                >\n            </DataView>}\n        </>\n    )\n    \n}\n\nexport default Portfolios","import React, { useEffect, useState, useContext } from 'react';\nimport {useLocation} from 'react-router-dom'\nimport { Bar } from 'react-chartjs-2';\nimport GridContext from \"./gridContext\"\nimport \"./style.css\";\n\nconst rand = () => Math.round(Math.random() * 20 - 10);\n\nconst genData = () => ({\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [\n    {\n      label: 'Scale',\n      data: [rand(), rand(), rand(), rand(), rand(), rand()],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n});\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nconst Topics = (props) => {    \n\n  const [data, setData] = useState(genData())\n  const {gridTopic} = useContext(GridContext) \n  let location = useLocation()  \n  const getTopic = thePath => thePath.substring(thePath.lastIndexOf('/') + 1)\n  let topic = getTopic(location.pathname)\n\n  useEffect(() => {    \n    const interval = setInterval(() => setData(genData()), 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      <div className='header'>\n        <h1 className='title'>{topic}</h1>\n        <div className='links'>\n          <a\n            className='btn btn-gh'\n            href='https://github.com/pdhoward'\n          >\n            Github Source\n          </a>\n        </div>\n      </div>\n      <Bar data={data} options={options} />\n    </>\n  )\n}\n    \n    \n\n\nexport default Topics","import React, {useState, useEffect, useContext} from \"react\";\nimport {useLocation} from 'react-router-dom'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { CancelToken, Loader } from \"../components/loader\";\nimport GridContext from \"./gridContext\"\n\nconst Schemas = (props) => {    \n    const [gridApi, setGridApi] = useState(null)\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const [loading, setLoading] = useState(true)\n    const [rows, setRows] = useState([])\n    const [error, setError] = useState(\"\")\n    const [errorPrefix, setErrorPrefix] = useState(\"\")\n\n    let location = useLocation()\n\n    const {gridUpdate} = useContext(GridContext)    \n    \n    const getTopic = thePath => thePath.substring(thePath.lastIndexOf('/') + 1)\n        \n    let url = new Url(location.search, ``)\n    let loader= new Loader();    \n\n    let onGridReady = (params) => {        \n       setGridApi(params.api)\n       setGridColumnApi(params.columnApi)\n       params.api.sizeColumnsToFit()\n       \n    }\n\n    useEffect(() => {\n        async function getData() {           \n            await loader.Load(fetchSchemas)          \n        }\n        getData();\n     },[]);\n    \n    let fetchSchemas = async (cancelToken = new CancelToken()) => {\n        \n        let topic = getTopic(location.pathname)       \n        let t = topic.trim()\n        let urlendpoint = ''\n        if (window.location.hostname == 'localhost' ) {\n            urlendpoint = `http://${'localhost:9999'}${'/api/schemas/'}`   \n        } else {\n            urlendpoint = `https://mssworkbench.onrender.com/api/schemas/` \n        }\n        let opts = {}\n        opts.segment = t\n        console.log(`-----------schema l 55------`)\n        console.log(opts)\n        const data = await cancelToken.Fetch(urlendpoint, opts) \n        console.log(data)\n        if (cancelToken.Aborted) return\n        if (data.error) {\n            setLoading(false)\n            setError(data.error)\n            setErrorPrefix(\"Failed to fetch schemas. Error: \")           \n            return\n        }       \n        const results = data.map(r => (\n            { ...r,\n              raw: r, \n              history: props.history } ))\n\n        setLoading(false)       \n        setRows(results)     \n    }    \n\n    const getColumnDefs = () => {\n        return [\n            { headerName: \"Title\", field: \"title\"},\n            { headerName: \"Description\", field: \"description\", filter: \"agTextColumnFilter\" },\n            { headerName: \"Version\", field: \"$schema\", filter: \"agTextColumnFilter\" }\n        ]}\n        \n    return (\n        <>\n            <KafkaToolbar\n                title=\"Portfolio\"\n                url={url}\n            >\n            </KafkaToolbar>\n            {loading && <><CircularProgress /><div>Loading...</div></>}\n            <ErrorMsg error={error} prefix={errorPrefix}></ErrorMsg>\n            {!loading && <DataView\n                search={(r) => r.topic}\n                rows={rows}\n                raw={rows.map(r => ({...r.raw}))}\n                url={url}\n                columnDefs={getColumnDefs()}\n                onGridReady={onGridReady}\n                >\n            </DataView>}\n        </>\n    )\n    \n}\n\nexport default Schemas","import React, {useState, useEffect, useContext} from \"react\";\nimport {useLocation} from 'react-router-dom'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { KafkaToolbar} from '../components/toolbar';\nimport { DataView} from '../components/data_view';\nimport { ErrorMsg} from '../components/error_msg';\nimport { Url } from \"../components/url\";\nimport { CancelToken, Loader } from \"../components/loader\";\nimport GridContext from \"./gridContext\"\n\nconst Algorithms = (props) => {    \n    const [gridApi, setGridApi] = useState(null)\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const [loading, setLoading] = useState(true)\n    const [rows, setRows] = useState([])\n    const [error, setError] = useState(\"\")\n    const [errorPrefix, setErrorPrefix] = useState(\"\")\n\n    let location = useLocation()\n\n    const {gridUpdate} = useContext(GridContext)    \n    \n    const getTopic = thePath => thePath.substring(thePath.lastIndexOf('/') + 1)\n        \n    let url = new Url(location.search, ``)\n    let loader= new Loader();    \n\n    let onGridReady = (params) => {        \n       setGridApi(params.api)\n       setGridColumnApi(params.columnApi)\n       params.api.sizeColumnsToFit()\n       \n    }\n\n    useEffect(() => {\n        async function getData() {           \n            await loader.Load(fetchAlgorithms)          \n        }\n        getData();\n     },[]);\n    \n    let fetchAlgorithms = async (cancelToken = new CancelToken()) => {\n        \n        let topic = getTopic(location.pathname)       \n        let t = topic.trim()\n        let urlendpoint = ''\n        if (window.location.hostname == 'localhost' ) {\n            urlendpoint = `http://${'localhost:9999'}${'/api/algorithms/'}`   \n        } else {\n            urlendpoint = `https://mssworkbench.onrender.com/api/algorithms/` \n        }\n        let opts = {}\n        opts.segment = t        \n        const data = await cancelToken.Fetch(urlendpoint, opts) \n        \n        if (cancelToken.Aborted) return\n        if (data.error) {\n            setLoading(false)\n            setError(data.error)\n            setErrorPrefix(\"Failed to fetch schemas. Error: \")           \n            return\n        }       \n        const results = data.map(r => (\n            { ...r,\n              raw: r, \n              history: props.history } ))\n\n        setLoading(false)       \n        setRows(results)     \n    }    \n\n    const getColumnDefs = () => {\n        return [\n            { headerName: \"Title\", field: \"title\"},\n            { headerName: \"Description\", field: \"description\", filter: \"agTextColumnFilter\" },\n            { headerName: \"Version\", field: \"$schema\", filter: \"agTextColumnFilter\" }\n        ]}\n        \n    return (\n        <>\n            <KafkaToolbar\n                title=\"Portfolio\"\n                url={url}\n            >\n            </KafkaToolbar>\n            {loading && <><CircularProgress /><div>Loading...</div></>}\n            <ErrorMsg error={error} prefix={errorPrefix}></ErrorMsg>\n            {!loading && <DataView\n                search={(r) => r.topic}\n                rows={rows}\n                raw={rows.map(r => ({...r.raw}))}\n                url={url}\n                columnDefs={getColumnDefs()}\n                onGridReady={onGridReady}\n                >\n            </DataView>}\n        </>\n    )\n    \n}\n\nexport default Algorithms","import React, {useState} from \"react\";\r\nimport { Route, BrowserRouter as Router, Link } from 'react-router-dom'\r\nimport  Portfolios  from \"./business/portfolios\"\r\nimport  Topics  from \"./business/topics\"\r\nimport  Schemas  from \"./business/schemas\"\r\nimport  Algorithms  from \"./business/algorithms\"\r\nimport { GlobalThemeProvider } from \"./components/theme_hook\"\r\nimport GridContext  from './business/gridContext'\r\nimport \"./style.css\";\r\n\r\n\r\nconst App = () => {\r\n\tconst [gridTopic, setGridTopic] = useState('')\r\n\tconst gridUpdate = (obj) => {\r\n\t\tlet {newTopic} = obj \r\n\t\tsetGridTopic(newTopic)\r\n\t}\r\n\treturn (\r\n\t\t<GlobalThemeProvider>\r\n\t\t\t<GridContext.Provider value={{gridTopic, gridUpdate}} >\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Route path='/' exact component={Portfolios} />\t\t\t\t\r\n\t\t\t\t\t\t<Route path=\"/topic/:topic\"> <Topics/> </Route>\r\n\t\t\t\t\t\t<Route path=\"/schema/:schema\"> <Schemas/> </Route>\r\n\t\t\t\t\t\t<Route path=\"/algorithm/:algorithm\"> <Algorithms/> </Route>\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Router>\r\n\t\t\t</GridContext.Provider>\r\n\t\t</GlobalThemeProvider>\r\n\t)\r\n};\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","exports.SearchStyle = `case-sensitive` | `regex` | ``\r\n\r\nexports.Includes = (text, pattern, searchStyle) =>{\r\n    switch (searchStyle) {\r\n        case `case-sensitive`:\r\n            return text.includes(pattern)\r\n        case `regex`:\r\n            try {\r\n                const re = new RegExp(pattern)\r\n                return re.test(text)\r\n            } catch (SyntaxError) {\r\n                return false\r\n            }\r\n        default:\r\n            return text.toLowerCase().includes(pattern.toLowerCase())\r\n    }\r\n}"],"sourceRoot":""}